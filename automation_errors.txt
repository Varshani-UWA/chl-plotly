2025-10-16 13:50:10,030  INFO: === Starting daily chlorophyll pipeline ===
2025-10-16 13:50:10,031  INFO: ============================================================
2025-10-16 13:50:10,032  INFO: FIRST RUN DETECTED: Performing initial bulk download
2025-10-16 13:50:10,032  INFO: Downloading data from 2025-10-01 to 2025-10-16
2025-10-16 13:50:10,032  INFO: ============================================================
2025-10-16 13:50:10,032  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 13:50:11,402  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 13:50:16,318  INFO: Earthdata login OK.
2025-10-16 13:50:16,318  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for date range 2025-10-01 to 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 13:50:17,187  INFO: Granules found: 13
2025-10-16 13:50:18,090  INFO: Found 13 items for OLCIS3A_L2_EFR_OC_NRT. Downloading...
2025-10-16 13:50:18,091  INFO:  Getting 13 granules, approx download size: 1.71 GB
QUEUEING TASKS | :   0%|          | 0/13 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 13/13 [00:00<00:00, 1756.69it/s]
PROCESSING TASKS | :   0%|          | 0/13 [00:00<?, ?it/s]PROCESSING TASKS | :   8%|7         | 1/13 [00:45<09:06, 45.56s/it]PROCESSING TASKS | :  15%|#5        | 2/13 [00:46<03:31, 19.20s/it]PROCESSING TASKS | :  23%|##3       | 3/13 [00:50<02:04, 12.44s/it]PROCESSING TASKS | :  31%|###       | 4/13 [01:06<02:04, 13.81s/it]PROCESSING TASKS | :  38%|###8      | 5/13 [01:22<01:57, 14.65s/it]PROCESSING TASKS | :  46%|####6     | 6/13 [01:29<01:23, 11.86s/it]PROCESSING TASKS | :  54%|#####3    | 7/13 [01:37<01:04, 10.69s/it]PROCESSING TASKS | :  62%|######1   | 8/13 [01:38<00:37,  7.45s/it]PROCESSING TASKS | :  69%|######9   | 9/13 [01:58<00:46, 11.60s/it]PROCESSING TASKS | :  77%|#######6  | 10/13 [02:03<00:28,  9.51s/it]PROCESSING TASKS | :  85%|########4 | 11/13 [02:09<00:17,  8.51s/it]PROCESSING TASKS | :  92%|#########2| 12/13 [02:15<00:07,  7.81s/it]PROCESSING TASKS | : 100%|##########| 13/13 [02:22<00:00,  7.49s/it]PROCESSING TASKS | : 100%|##########| 13/13 [02:22<00:00, 10.98s/it]
COLLECTING RESULTS | :   0%|          | 0/13 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 13/13 [00:00<00:00, 217234.87it/s]
2025-10-16 13:52:42,883  INFO: Download directory now has 13 .nc files (may include older files).
2025-10-16 13:52:42,883  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for date range 2025-10-01 to 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 13:52:43,718  INFO: Granules found: 12
2025-10-16 13:52:44,476  INFO: Found 12 items for OLCIS3B_L2_EFR_OC_NRT. Downloading...
2025-10-16 13:52:44,476  INFO:  Getting 12 granules, approx download size: 1.38 GB
QUEUEING TASKS | :   0%|          | 0/12 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 12/12 [00:00<00:00, 1556.04it/s]
PROCESSING TASKS | :   0%|          | 0/12 [00:00<?, ?it/s]PROCESSING TASKS | :   8%|8         | 1/12 [00:27<05:05, 27.73s/it]PROCESSING TASKS | :  17%|#6        | 2/12 [00:37<02:50, 17.06s/it]PROCESSING TASKS | :  25%|##5       | 3/12 [01:04<03:16, 21.82s/it]PROCESSING TASKS | :  33%|###3      | 4/12 [01:09<01:59, 14.91s/it]PROCESSING TASKS | :  42%|####1     | 5/12 [01:17<01:26, 12.39s/it]PROCESSING TASKS | :  50%|#####     | 6/12 [01:24<01:04, 10.69s/it]PROCESSING TASKS | :  58%|#####8    | 7/12 [01:27<00:41,  8.34s/it]PROCESSING TASKS | :  67%|######6   | 8/12 [01:30<00:26,  6.56s/it]PROCESSING TASKS | :  75%|#######5  | 9/12 [01:40<00:22,  7.45s/it]PROCESSING TASKS | :  83%|########3 | 10/12 [01:46<00:14,  7.03s/it]PROCESSING TASKS | :  92%|#########1| 11/12 [01:46<00:04,  4.99s/it]PROCESSING TASKS | : 100%|##########| 12/12 [01:50<00:00,  4.75s/it]PROCESSING TASKS | : 100%|##########| 12/12 [01:50<00:00,  9.23s/it]
COLLECTING RESULTS | :   0%|          | 0/12 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 12/12 [00:00<00:00, 251658.24it/s]
2025-10-16 13:54:37,258  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 13:54:37,259  INFO: Total unique files downloaded: 25
2025-10-16 13:54:37,259  INFO: Bulk download complete. Processing 25 files...
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:41,041  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:42,666  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:44,199  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:45,686  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:47,206  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:48,757  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:50,388  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:54:51,899  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:53,399  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:54:54,905  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:54:56,384  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:54:57,951  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:54:59,404  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:55:00,806  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:02,151  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:03,584  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:55:04,995  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:06,444  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:07,872  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:09,345  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:10,777  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:12,197  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 13:55:13,576  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:14,934  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 13:55:16,336  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 13:55:16,369  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 13:55:16,385  INFO: Initial CSV populated with 15 records
2025-10-16 13:55:16,385  INFO: ============================================================
2025-10-16 13:55:16,385  INFO: IMPORTANT: Set INITIAL_BULK_DOWNLOAD = False in CONFIG
2025-10-16 13:55:16,385  INFO: for subsequent runs to enable daily mode
2025-10-16 13:55:16,385  INFO: ============================================================
2025-10-16 13:55:17,900  WARNING: Could not save PNG (kaleido may not be installed): 
Image export using the "kaleido" engine requires the Kaleido package,
which can be installed using pip:

    $ pip install --upgrade kaleido

2025-10-16 13:55:17,900  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 13:55:17,936  WARNING: Could not save PNG (kaleido may not be installed): 
Image export using the "kaleido" engine requires the Kaleido package,
which can be installed using pip:

    $ pip install --upgrade kaleido

2025-10-16 13:55:17,936  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 13:55:17,998  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 13:55:17,998  INFO: Attempting to commit and push changes to Git...
2025-10-16 13:55:18,142  ERROR: Not a git repository: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time
2025-10-16 13:55:18,142  INFO: Initialize with: git init
2025-10-16 13:55:18,142  WARNING: Git commit/push had issues - check logs
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:561: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:565: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 13:55:18,147  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 13:55:18,147  INFO: === Pipeline finished ===
2025-10-16 14:19:14,690  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-16 14:19:14,701  INFO: Daily mode: Searching for data for 2025-10-15
2025-10-16 14:19:14,702  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 14:19:15,976  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 14:19:20,962  INFO: Earthdata login OK.
2025-10-16 14:19:20,962  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:19:21,831  INFO: Granules found: 1
2025-10-16 14:19:22,783  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:19:22,783  INFO:  Getting 1 granules, approx download size: 0.2 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 2892.62it/s]2025-10-16 14:19:22,788  INFO: File S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc already downloaded

PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:00<00:00, 18236.10it/s]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 36472.21it/s]
2025-10-16 14:19:23,790  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 14:19:23,791  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:19:24,517  INFO: Granules found: 2
2025-10-16 14:19:25,286  INFO: Found 2 items for OLCIS3B_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:19:25,286  INFO:  Getting 2 granules, approx download size: 0.22 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-16 14:19:25,288  INFO: File S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 2516.08it/s]
2025-10-16 14:19:25,289  INFO: File S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc already downloaded
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 19065.02it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 36792.14it/s]
2025-10-16 14:19:26,291  INFO: Download directory now has 25 .nc files (may include older files).
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:30,273  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:32,275  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:34,330  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:36,166  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:37,930  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:39,681  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:41,286  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:19:42,826  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:44,467  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:19:46,532  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:19:48,293  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:50,629  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:19:52,525  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:19:54,183  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:55,836  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:19:57,838  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:19:59,708  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:01,383  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:03,066  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:04,806  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:06,576  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:08,354  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:20:10,150  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:11,816  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:20:13,535  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 14:20:13,579  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 14:20:14,258  WARNING: Could not save PNG (kaleido may not be installed): 
Image export using the "kaleido" engine requires the Kaleido package,
which can be installed using pip:

    $ pip install --upgrade kaleido

2025-10-16 14:20:14,258  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 14:20:14,305  WARNING: Could not save PNG (kaleido may not be installed): 
Image export using the "kaleido" engine requires the Kaleido package,
which can be installed using pip:

    $ pip install --upgrade kaleido

2025-10-16 14:20:14,305  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 14:20:14,372  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 14:20:14,373  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-16 14:20:15,700  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-15
2025-10-16 14:20:15,768  INFO: Current branch: main
2025-10-16 14:20:17,595  INFO: Git push successful to main
2025-10-16 14:20:17,595  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:561: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:565: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 14:20:17,602  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 14:20:17,602  INFO: === Pipeline finished ===
2025-10-16 14:23:32,301  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-16 14:23:32,307  INFO: Daily mode: Searching for data for 2025-10-15
2025-10-16 14:23:32,308  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 14:23:33,599  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 14:23:38,517  INFO: Earthdata login OK.
2025-10-16 14:23:38,517  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:23:39,429  INFO: Granules found: 1
2025-10-16 14:23:40,195  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:23:40,196  INFO:  Getting 1 granules, approx download size: 0.2 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1939.11it/s]2025-10-16 14:23:40,203  INFO: File S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc already downloaded

PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:00<00:00, 18808.54it/s]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 32263.88it/s]
2025-10-16 14:23:41,206  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 14:23:41,206  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:23:41,983  INFO: Granules found: 2
2025-10-16 14:23:42,732  INFO: Found 2 items for OLCIS3B_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:23:42,732  INFO:  Getting 2 granules, approx download size: 0.22 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-16 14:23:42,734  INFO: File S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc already downloaded
2025-10-16 14:23:42,734  INFO: File S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 1873.71it/s]
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 20460.02it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 53773.13it/s]
2025-10-16 14:23:43,738  INFO: Download directory now has 25 .nc files (may include older files).
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:47,625  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:49,345  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:51,208  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:52,946  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:54,559  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:56,230  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:23:57,935  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:23:59,470  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:01,181  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:24:02,971  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:24:04,744  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:06,446  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:24:08,019  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:24:09,644  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:11,216  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:12,910  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:24:14,493  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:16,013  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:17,609  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:19,173  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:20,709  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:22,326  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:24:23,885  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:25,385  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:24:26,980  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 14:24:27,019  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 14:24:28,380  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:24:28,380  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:24:28,382  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpnb3ppzxk.
2025-10-16 14:24:28,383  INFO: Opening browser.
2025-10-16 14:24:28,385  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp_olbx3ty.
2025-10-16 14:24:28,386  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp_olbx3ty
2025-10-16 14:24:29,284  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpnb3ppzxk/index.html
2025-10-16 14:24:29,285  INFO: Waiting on all navigates
2025-10-16 14:24:31,273  INFO: All navigates done, putting them all in queue.
2025-10-16 14:24:31,275  INFO: Getting tab from queue (has 1)
2025-10-16 14:24:31,275  INFO: Got E672
2025-10-16 14:24:31,275  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-16 14:24:31,275  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:24:31,361  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:24:31,362  INFO: Reloading tab E672 before return.
2025-10-16 14:24:31,459  INFO: Putting tab E672 back (queue size: 0).
2025-10-16 14:24:31,459  INFO: Waiting for all cleanups to finish.
2025-10-16 14:24:31,459  INFO: Exiting Kaleido
2025-10-16 14:24:31,460  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:31,460  INFO: shutil.rmtree worked.
2025-10-16 14:24:31,460  INFO: Cancelling tasks.
2025-10-16 14:24:31,461  INFO: Exiting Kaleido/Choreo
2025-10-16 14:24:31,461  INFO: Closing browser.
2025-10-16 14:24:31,462  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:31,463  INFO: shutil.rmtree worked.
2025-10-16 14:24:31,463  INFO: Cancelling tasks.
2025-10-16 14:24:31,463  INFO: Exiting Kaleido/Choreo
2025-10-16 14:24:31,463  INFO: Closing browser.
2025-10-16 14:24:31,651  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:31,651  INFO: shutil.rmtree worked.
2025-10-16 14:24:31,654  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 14:24:31,708  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:24:31,709  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:24:31,710  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpso_dbw5e.
2025-10-16 14:24:31,711  INFO: Opening browser.
2025-10-16 14:24:31,712  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp55jlxgr_.
2025-10-16 14:24:31,713  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp55jlxgr_
2025-10-16 14:24:32,304  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpso_dbw5e/index.html
2025-10-16 14:24:32,304  INFO: Waiting on all navigates
2025-10-16 14:24:34,135  INFO: All navigates done, putting them all in queue.
2025-10-16 14:24:34,137  INFO: Getting tab from queue (has 1)
2025-10-16 14:24:34,137  INFO: Got 9482
2025-10-16 14:24:34,137  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-16 14:24:34,137  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:24:34,248  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:24:34,249  INFO: Reloading tab 9482 before return.
2025-10-16 14:24:34,369  INFO: Putting tab 9482 back (queue size: 0).
2025-10-16 14:24:34,369  INFO: Waiting for all cleanups to finish.
2025-10-16 14:24:34,369  INFO: Exiting Kaleido
2025-10-16 14:24:34,370  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:34,370  INFO: shutil.rmtree worked.
2025-10-16 14:24:34,370  INFO: Cancelling tasks.
2025-10-16 14:24:34,370  INFO: Exiting Kaleido/Choreo
2025-10-16 14:24:34,370  INFO: Closing browser.
2025-10-16 14:24:34,373  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:34,373  INFO: shutil.rmtree worked.
2025-10-16 14:24:34,374  INFO: Cancelling tasks.
2025-10-16 14:24:34,374  INFO: Exiting Kaleido/Choreo
2025-10-16 14:24:34,374  INFO: Closing browser.
2025-10-16 14:24:34,553  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:34,554  INFO: shutil.rmtree worked.
2025-10-16 14:24:34,557  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 14:24:34,577  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:34,577  INFO: shutil.rmtree worked.
2025-10-16 14:24:34,635  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 14:24:34,636  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-16 14:24:35,850  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-15
2025-10-16 14:24:35,933  INFO: Current branch: main
2025-10-16 14:24:37,876  INFO: Git push successful to main
2025-10-16 14:24:37,876  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:561: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:565: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 14:24:37,879  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 14:24:37,880  INFO: === Pipeline finished ===
2025-10-16 14:24:49,663  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:24:49,663  INFO: shutil.rmtree worked.
2025-10-16 14:32:23,706  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-16 14:32:23,712  INFO: Daily mode: Searching for data for 2025-10-15
2025-10-16 14:32:23,713  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 14:32:25,000  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 14:32:29,914  INFO: Earthdata login OK.
2025-10-16 14:32:29,914  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:32:30,794  INFO: Granules found: 1
2025-10-16 14:32:31,658  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:32:31,659  INFO:  Getting 1 granules, approx download size: 0.2 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1500.65it/s]2025-10-16 14:32:31,666  INFO: File S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc already downloaded

PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:00<00:00, 16980.99it/s]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 36157.79it/s]
2025-10-16 14:32:32,669  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 14:32:32,669  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:32:33,426  INFO: Granules found: 2
2025-10-16 14:32:34,139  INFO: Found 2 items for OLCIS3B_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:32:34,139  INFO:  Getting 2 granules, approx download size: 0.22 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-16 14:32:34,141  INFO: File S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 2534.32it/s]
2025-10-16 14:32:34,141  INFO: File S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc already downloaded
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 35696.20it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 67650.06it/s]
2025-10-16 14:32:35,144  INFO: Download directory now has 25 .nc files (may include older files).
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:38,298  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:39,935  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:41,470  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:42,958  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:44,459  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:46,030  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:47,547  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:32:49,058  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:50,603  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:32:52,155  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:32:53,676  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:32:55,421  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:32:57,235  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:32:58,900  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:00,696  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:02,289  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:33:03,914  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:05,407  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:07,048  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:08,576  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:10,097  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:11,644  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:33:13,250  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:14,717  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:33:16,262  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 14:33:16,278  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 14:33:16,798  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:33:16,798  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:33:16,800  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpka9fws5v.
2025-10-16 14:33:16,801  INFO: Opening browser.
2025-10-16 14:33:16,803  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpsgsysy0j.
2025-10-16 14:33:16,804  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpsgsysy0j
2025-10-16 14:33:18,487  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpka9fws5v/index.html
2025-10-16 14:33:18,487  INFO: Waiting on all navigates
2025-10-16 14:33:20,317  INFO: All navigates done, putting them all in queue.
2025-10-16 14:33:20,319  INFO: Getting tab from queue (has 1)
2025-10-16 14:33:20,319  INFO: Got 7608
2025-10-16 14:33:20,319  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-16 14:33:20,319  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:33:20,453  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:33:20,454  INFO: Reloading tab 7608 before return.
2025-10-16 14:33:20,567  INFO: Putting tab 7608 back (queue size: 0).
2025-10-16 14:33:20,567  INFO: Waiting for all cleanups to finish.
2025-10-16 14:33:20,567  INFO: Exiting Kaleido
2025-10-16 14:33:20,568  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:20,568  INFO: shutil.rmtree worked.
2025-10-16 14:33:20,568  INFO: Cancelling tasks.
2025-10-16 14:33:20,568  INFO: Exiting Kaleido/Choreo
2025-10-16 14:33:20,568  INFO: Closing browser.
2025-10-16 14:33:20,570  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:20,570  INFO: shutil.rmtree worked.
2025-10-16 14:33:20,570  INFO: Cancelling tasks.
2025-10-16 14:33:20,570  INFO: Exiting Kaleido/Choreo
2025-10-16 14:33:20,570  INFO: Closing browser.
2025-10-16 14:33:20,743  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:20,744  INFO: shutil.rmtree worked.
2025-10-16 14:33:20,747  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 14:33:20,787  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:33:20,787  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:33:20,789  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp4ch_yz1o.
2025-10-16 14:33:20,791  INFO: Opening browser.
2025-10-16 14:33:20,793  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpiei84b1a.
2025-10-16 14:33:20,793  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpiei84b1a
2025-10-16 14:33:21,473  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp4ch_yz1o/index.html
2025-10-16 14:33:21,473  INFO: Waiting on all navigates
2025-10-16 14:33:22,862  INFO: All navigates done, putting them all in queue.
2025-10-16 14:33:22,864  INFO: Getting tab from queue (has 1)
2025-10-16 14:33:22,864  INFO: Got B394
2025-10-16 14:33:22,864  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-16 14:33:22,864  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:33:22,984  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:33:22,985  INFO: Reloading tab B394 before return.
2025-10-16 14:33:23,127  INFO: Putting tab B394 back (queue size: 0).
2025-10-16 14:33:23,127  INFO: Waiting for all cleanups to finish.
2025-10-16 14:33:23,127  INFO: Exiting Kaleido
2025-10-16 14:33:23,128  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:23,128  INFO: shutil.rmtree worked.
2025-10-16 14:33:23,128  INFO: Cancelling tasks.
2025-10-16 14:33:23,128  INFO: Exiting Kaleido/Choreo
2025-10-16 14:33:23,128  INFO: Closing browser.
2025-10-16 14:33:23,130  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:23,131  INFO: shutil.rmtree worked.
2025-10-16 14:33:23,131  INFO: Cancelling tasks.
2025-10-16 14:33:23,131  INFO: Exiting Kaleido/Choreo
2025-10-16 14:33:23,131  INFO: Closing browser.
2025-10-16 14:33:23,438  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:23,439  INFO: shutil.rmtree worked.
2025-10-16 14:33:23,443  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 14:33:23,468  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:23,468  INFO: shutil.rmtree worked.
2025-10-16 14:33:23,509  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 14:33:23,509  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-16 14:33:24,597  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-15
2025-10-16 14:33:24,669  INFO: Current branch: main
2025-10-16 14:33:26,388  INFO: Git push successful to main
2025-10-16 14:33:26,389  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:561: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:565: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 14:33:26,394  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 14:33:26,394  INFO: === Pipeline finished ===
2025-10-16 14:33:26,478  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:33:26,479  INFO: shutil.rmtree worked.
2025-10-16 14:37:25,056  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-16 14:37:25,073  INFO: Daily mode: Searching for data for 2025-10-15
2025-10-16 14:37:25,073  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 14:37:26,414  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 14:37:31,438  INFO: Earthdata login OK.
2025-10-16 14:37:31,438  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:37:32,278  INFO: Granules found: 1
2025-10-16 14:37:33,026  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:37:33,027  INFO:  Getting 1 granules, approx download size: 0.2 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 2962.08it/s]2025-10-16 14:37:33,033  INFO: File S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc already downloaded

PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:00<00:00, 9341.43it/s]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 35246.25it/s]
2025-10-16 14:37:34,036  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 14:37:34,036  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:37:34,794  INFO: Granules found: 2
2025-10-16 14:37:35,526  INFO: Found 2 items for OLCIS3B_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:37:35,526  INFO:  Getting 2 granules, approx download size: 0.22 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-16 14:37:35,527  INFO: File S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc already downloaded
2025-10-16 14:37:35,528  INFO: File S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 2307.10it/s]
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 39568.91it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 66576.25it/s]
2025-10-16 14:37:36,530  INFO: Download directory now has 25 .nc files (may include older files).
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:39,751  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:41,247  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:42,686  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:44,089  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:45,395  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:46,725  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:48,062  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:37:49,363  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:50,684  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:37:52,033  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:37:53,355  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:54,728  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:37:56,100  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:37:57,480  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:37:58,776  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:00,127  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:38:01,454  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:02,752  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:04,083  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:05,398  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:06,704  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:08,028  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:38:09,361  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:10,653  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:38:12,134  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 14:38:12,154  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 14:38:13,376  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:38:13,376  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:38:13,378  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpsggg8d8z.
2025-10-16 14:38:13,379  INFO: Opening browser.
2025-10-16 14:38:13,381  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpohu1dn00.
2025-10-16 14:38:13,381  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpohu1dn00
2025-10-16 14:38:14,818  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpsggg8d8z/index.html
2025-10-16 14:38:14,818  INFO: Waiting on all navigates
2025-10-16 14:38:16,656  INFO: All navigates done, putting them all in queue.
2025-10-16 14:38:16,657  INFO: Getting tab from queue (has 1)
2025-10-16 14:38:16,657  INFO: Got B7D3
2025-10-16 14:38:16,658  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-16 14:38:16,658  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:38:16,769  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:38:16,769  INFO: Reloading tab B7D3 before return.
2025-10-16 14:38:16,932  INFO: Putting tab B7D3 back (queue size: 0).
2025-10-16 14:38:16,933  INFO: Waiting for all cleanups to finish.
2025-10-16 14:38:16,933  INFO: Exiting Kaleido
2025-10-16 14:38:16,934  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:16,935  INFO: shutil.rmtree worked.
2025-10-16 14:38:16,935  INFO: Cancelling tasks.
2025-10-16 14:38:16,935  INFO: Exiting Kaleido/Choreo
2025-10-16 14:38:16,935  INFO: Closing browser.
2025-10-16 14:38:16,938  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:16,938  INFO: shutil.rmtree worked.
2025-10-16 14:38:16,938  INFO: Cancelling tasks.
2025-10-16 14:38:16,939  INFO: Exiting Kaleido/Choreo
2025-10-16 14:38:16,939  INFO: Closing browser.
2025-10-16 14:38:17,151  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:17,151  INFO: shutil.rmtree worked.
2025-10-16 14:38:17,154  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 14:38:17,246  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:38:17,247  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:38:17,247  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp8_dqo7wc.
2025-10-16 14:38:17,248  INFO: Opening browser.
2025-10-16 14:38:17,249  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpcljopm3a.
2025-10-16 14:38:17,249  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpcljopm3a
2025-10-16 14:38:17,966  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp8_dqo7wc/index.html
2025-10-16 14:38:17,966  INFO: Waiting on all navigates
2025-10-16 14:38:20,505  INFO: All navigates done, putting them all in queue.
2025-10-16 14:38:20,508  INFO: Getting tab from queue (has 1)
2025-10-16 14:38:20,508  INFO: Got D8DB
2025-10-16 14:38:20,508  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-16 14:38:20,509  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:38:20,702  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:38:20,703  INFO: Reloading tab D8DB before return.
2025-10-16 14:38:20,931  INFO: Putting tab D8DB back (queue size: 0).
2025-10-16 14:38:20,932  INFO: Waiting for all cleanups to finish.
2025-10-16 14:38:20,932  INFO: Exiting Kaleido
2025-10-16 14:38:20,933  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:20,934  INFO: shutil.rmtree worked.
2025-10-16 14:38:20,934  INFO: Cancelling tasks.
2025-10-16 14:38:20,934  INFO: Exiting Kaleido/Choreo
2025-10-16 14:38:20,934  INFO: Closing browser.
2025-10-16 14:38:20,938  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:20,938  INFO: shutil.rmtree worked.
2025-10-16 14:38:20,938  INFO: Cancelling tasks.
2025-10-16 14:38:20,939  INFO: Exiting Kaleido/Choreo
2025-10-16 14:38:20,939  INFO: Closing browser.
2025-10-16 14:38:21,191  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:21,191  INFO: shutil.rmtree worked.
2025-10-16 14:38:21,194  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 14:38:21,210  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:21,210  INFO: shutil.rmtree worked.
2025-10-16 14:38:21,289  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 14:38:21,289  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-16 14:38:22,395  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-15
2025-10-16 14:38:22,491  INFO: Current branch: main
2025-10-16 14:38:24,351  INFO: Git push successful to main
2025-10-16 14:38:24,351  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 14:38:24,354  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 14:38:24,354  INFO: === Pipeline finished ===
2025-10-16 14:38:32,277  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:38:32,278  INFO: shutil.rmtree worked.
2025-10-16 14:52:40,164  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-16 14:52:40,169  INFO: Daily mode: Searching for data for 2025-10-15
2025-10-16 14:52:40,170  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 14:52:41,416  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 14:52:46,461  INFO: Earthdata login OK.
2025-10-16 14:52:46,462  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:52:47,341  INFO: Granules found: 1
2025-10-16 14:52:48,135  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:52:48,136  INFO:  Getting 1 granules, approx download size: 0.2 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1888.48it/s]
2025-10-16 14:52:48,141  INFO: File S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc already downloaded
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:00<00:00, 16513.01it/s]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 36157.79it/s]
2025-10-16 14:52:49,144  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 14:52:49,145  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 14:52:49,907  INFO: Granules found: 2
2025-10-16 14:52:50,767  INFO: Found 2 items for OLCIS3B_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 14:52:50,768  INFO:  Getting 2 granules, approx download size: 0.22 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-16 14:52:50,769  INFO: File S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 1968.23it/s]
2025-10-16 14:52:50,769  INFO: File S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc already downloaded
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 18196.55it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 27324.46it/s]
2025-10-16 14:52:51,773  INFO: Download directory now has 25 .nc files (may include older files).
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:52:54,640  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:52:56,129  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:52:57,592  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:52:59,011  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:00,629  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:02,179  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:03,770  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:05,351  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:06,934  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:08,434  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:09,971  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:11,515  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:13,031  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:14,506  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:15,897  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:17,377  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:18,867  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:20,266  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:21,735  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:23,186  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:24,591  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:26,046  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 14:53:27,493  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:28,879  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 14:53:30,336  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 14:53:30,353  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 14:53:30,798  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:53:30,799  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:53:30,801  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp0lfxi3x2.
2025-10-16 14:53:30,802  INFO: Opening browser.
2025-10-16 14:53:30,804  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmphx_nv60y.
2025-10-16 14:53:30,804  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmphx_nv60y
2025-10-16 14:53:32,358  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp0lfxi3x2/index.html
2025-10-16 14:53:32,359  INFO: Waiting on all navigates
2025-10-16 14:53:34,092  INFO: All navigates done, putting them all in queue.
2025-10-16 14:53:34,093  INFO: Getting tab from queue (has 1)
2025-10-16 14:53:34,093  INFO: Got 18F5
2025-10-16 14:53:34,093  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-16 14:53:34,093  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:53:34,189  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 14:53:34,190  INFO: Reloading tab 18F5 before return.
2025-10-16 14:53:34,317  INFO: Putting tab 18F5 back (queue size: 0).
2025-10-16 14:53:34,317  INFO: Waiting for all cleanups to finish.
2025-10-16 14:53:34,318  INFO: Exiting Kaleido
2025-10-16 14:53:34,318  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:34,319  INFO: shutil.rmtree worked.
2025-10-16 14:53:34,319  INFO: Cancelling tasks.
2025-10-16 14:53:34,319  INFO: Exiting Kaleido/Choreo
2025-10-16 14:53:34,319  INFO: Closing browser.
2025-10-16 14:53:34,321  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:34,321  INFO: shutil.rmtree worked.
2025-10-16 14:53:34,321  INFO: Cancelling tasks.
2025-10-16 14:53:34,322  INFO: Exiting Kaleido/Choreo
2025-10-16 14:53:34,322  INFO: Closing browser.
2025-10-16 14:53:34,531  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:34,531  INFO: shutil.rmtree worked.
2025-10-16 14:53:34,533  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 14:53:34,538  WARNING: Could not add trend line: cannot convert input 345600.0 with the unit 'D'
2025-10-16 14:53:34,571  INFO: Chromium init'ed with kwargs {}
2025-10-16 14:53:34,571  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 14:53:34,572  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp2qujkzgr.
2025-10-16 14:53:34,573  INFO: Opening browser.
2025-10-16 14:53:34,575  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp6th2a4ek.
2025-10-16 14:53:34,575  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp6th2a4ek
2025-10-16 14:53:35,163  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp2qujkzgr/index.html
2025-10-16 14:53:35,164  INFO: Waiting on all navigates
2025-10-16 14:53:36,736  INFO: All navigates done, putting them all in queue.
2025-10-16 14:53:36,737  INFO: Getting tab from queue (has 1)
2025-10-16 14:53:36,737  INFO: Got C1B5
2025-10-16 14:53:36,737  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-16 14:53:36,737  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:53:36,825  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 14:53:36,825  INFO: Reloading tab C1B5 before return.
2025-10-16 14:53:36,935  INFO: Putting tab C1B5 back (queue size: 0).
2025-10-16 14:53:36,935  INFO: Waiting for all cleanups to finish.
2025-10-16 14:53:36,935  INFO: Exiting Kaleido
2025-10-16 14:53:36,936  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:36,937  INFO: shutil.rmtree worked.
2025-10-16 14:53:36,937  INFO: Cancelling tasks.
2025-10-16 14:53:36,937  INFO: Exiting Kaleido/Choreo
2025-10-16 14:53:36,937  INFO: Closing browser.
2025-10-16 14:53:36,939  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:36,939  INFO: shutil.rmtree worked.
2025-10-16 14:53:36,939  INFO: Cancelling tasks.
2025-10-16 14:53:36,939  INFO: Exiting Kaleido/Choreo
2025-10-16 14:53:36,939  INFO: Closing browser.
2025-10-16 14:53:37,083  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:37,083  INFO: shutil.rmtree worked.
2025-10-16 14:53:37,086  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 14:53:37,100  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:37,100  INFO: shutil.rmtree worked.
2025-10-16 14:53:37,141  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 14:53:37,141  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-16 14:53:38,050  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-15
2025-10-16 14:53:38,113  INFO: Current branch: main
2025-10-16 14:53:39,924  INFO: Git push successful to main
2025-10-16 14:53:39,924  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 14:53:39,927  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 14:53:39,927  INFO: === Pipeline finished ===
2025-10-16 14:53:40,000  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 14:53:40,001  INFO: shutil.rmtree worked.
2025-10-16 15:13:45,527  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-16 15:13:45,532  INFO: Daily mode: Searching for data for 2025-10-15
2025-10-16 15:13:45,532  INFO: Logging in to Earthdata via earthaccess...
2025-10-16 15:13:46,831  INFO: You're now authenticated with NASA Earthdata Login
2025-10-16 15:13:51,749  INFO: Earthdata login OK.
2025-10-16 15:13:51,749  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 15:13:52,579  INFO: Granules found: 1
2025-10-16 15:13:53,359  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 15:13:53,360  INFO:  Getting 1 granules, approx download size: 0.2 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 2666.44it/s]2025-10-16 15:13:53,365  INFO: File S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc already downloaded

PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:00<00:00, 8594.89it/s]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 34100.03it/s]
2025-10-16 15:13:54,368  INFO: Download directory now has 25 .nc files (may include older files).
2025-10-16 15:13:54,368  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-15 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-16 15:13:55,093  INFO: Granules found: 2
2025-10-16 15:13:56,132  INFO: Found 2 items for OLCIS3B_L2_EFR_OC_NRT on 2025-10-15. Downloading...
2025-10-16 15:13:56,132  INFO:  Getting 2 granules, approx download size: 0.22 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-16 15:13:56,134  INFO: File S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc already downloaded
2025-10-16 15:13:56,134  INFO: File S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 1814.15it/s]
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 39945.75it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 69327.34it/s]
2025-10-16 15:13:57,137  INFO: Download directory now has 25 .nc files (may include older files).
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:00,093  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:01,599  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:03,157  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:04,577  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:06,007  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:07,585  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:09,206  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:10,757  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:12,254  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:13,784  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:15,257  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:16,803  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:18,305  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:19,806  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:21,274  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:22,850  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:24,372  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:25,865  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:27,436  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:28,953  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:30,430  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:31,958  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-16 15:14:33,484  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:34,911  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-16 15:14:36,435  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-16 15:14:36,454  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 15)
2025-10-16 15:14:36,953  INFO: Chromium init'ed with kwargs {}
2025-10-16 15:14:36,954  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 15:14:36,956  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpcerd3ati.
2025-10-16 15:14:36,956  INFO: Opening browser.
2025-10-16 15:14:36,958  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp18wakyzn.
2025-10-16 15:14:36,958  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp18wakyzn
2025-10-16 15:14:38,407  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpcerd3ati/index.html
2025-10-16 15:14:38,407  INFO: Waiting on all navigates
2025-10-16 15:14:40,061  INFO: All navigates done, putting them all in queue.
2025-10-16 15:14:40,063  INFO: Getting tab from queue (has 1)
2025-10-16 15:14:40,063  INFO: Got 98CC
2025-10-16 15:14:40,063  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-16 15:14:40,063  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 15:14:40,239  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-16 15:14:40,240  INFO: Reloading tab 98CC before return.
2025-10-16 15:14:40,418  INFO: Putting tab 98CC back (queue size: 0).
2025-10-16 15:14:40,418  INFO: Waiting for all cleanups to finish.
2025-10-16 15:14:40,419  INFO: Exiting Kaleido
2025-10-16 15:14:40,420  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:40,420  INFO: shutil.rmtree worked.
2025-10-16 15:14:40,420  INFO: Cancelling tasks.
2025-10-16 15:14:40,420  INFO: Exiting Kaleido/Choreo
2025-10-16 15:14:40,420  INFO: Closing browser.
2025-10-16 15:14:40,422  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:40,423  INFO: shutil.rmtree worked.
2025-10-16 15:14:40,423  INFO: Cancelling tasks.
2025-10-16 15:14:40,423  INFO: Exiting Kaleido/Choreo
2025-10-16 15:14:40,424  INFO: Closing browser.
2025-10-16 15:14:40,584  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:40,584  INFO: shutil.rmtree worked.
2025-10-16 15:14:40,587  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-16 15:14:40,594  WARNING: Could not add trend line: cannot convert input 345600.0 with the unit 'D'
2025-10-16 15:14:40,639  INFO: Chromium init'ed with kwargs {}
2025-10-16 15:14:40,640  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-16 15:14:40,641  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmppfje0yel.
2025-10-16 15:14:40,642  INFO: Opening browser.
2025-10-16 15:14:40,644  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpcudx7fe1.
2025-10-16 15:14:40,644  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpcudx7fe1
2025-10-16 15:14:41,229  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmppfje0yel/index.html
2025-10-16 15:14:41,229  INFO: Waiting on all navigates
2025-10-16 15:14:42,632  INFO: All navigates done, putting them all in queue.
2025-10-16 15:14:42,634  INFO: Getting tab from queue (has 1)
2025-10-16 15:14:42,634  INFO: Got 713F
2025-10-16 15:14:42,634  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-16 15:14:42,634  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 15:14:42,728  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-16 15:14:42,729  INFO: Reloading tab 713F before return.
2025-10-16 15:14:42,837  INFO: Putting tab 713F back (queue size: 0).
2025-10-16 15:14:42,837  INFO: Waiting for all cleanups to finish.
2025-10-16 15:14:42,837  INFO: Exiting Kaleido
2025-10-16 15:14:42,839  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:42,839  INFO: shutil.rmtree worked.
2025-10-16 15:14:42,839  INFO: Cancelling tasks.
2025-10-16 15:14:42,839  INFO: Exiting Kaleido/Choreo
2025-10-16 15:14:42,839  INFO: Closing browser.
2025-10-16 15:14:42,841  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:42,842  INFO: shutil.rmtree worked.
2025-10-16 15:14:42,842  INFO: Cancelling tasks.
2025-10-16 15:14:42,842  INFO: Exiting Kaleido/Choreo
2025-10-16 15:14:42,842  INFO: Closing browser.
2025-10-16 15:14:43,002  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:43,003  INFO: shutil.rmtree worked.
2025-10-16 15:14:43,006  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-16 15:14:43,021  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:43,022  INFO: shutil.rmtree worked.
2025-10-16 15:14:43,062  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-16 15:14:43,063  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-16 15:14:44,105  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-15
2025-10-16 15:14:44,194  INFO: Current branch: main
2025-10-16 15:14:46,000  INFO: Git push successful to main
2025-10-16 15:14:46,000  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-16 15:14:46,004  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-16 15:14:46,004  INFO: === Pipeline finished ===
2025-10-16 15:14:46,080  INFO: TemporaryDirectory.cleanup() worked.
2025-10-16 15:14:46,080  INFO: shutil.rmtree worked.
2025-10-17 08:27:45,522  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-17 08:27:45,541  INFO: Daily mode: Searching for data for 2025-10-16
2025-10-17 08:27:45,542  INFO: Logging in to Earthdata via earthaccess...
2025-10-17 08:28:16,450  ERROR: Earthdata login failed. Check credentials (.netrc) and network.
Traceback (most recent call last):
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
TimeoutError: _ssl.c:1011: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\util.py", line 39, in reraise
    raise value
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 488, in _make_request
    raise new_e
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 466, in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 367, in _raise_timeout
    raise ReadTimeoutError(
        self, url, f"Read timed out. (read timeout={timeout_value})"
    ) from err
urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='urs.earthdata.nasa.gov', port=443): Read timed out. (read timeout=10)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py", line 81, in earthdata_login_check
    session = earthaccess.login()
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\api.py", line 205, in login
    earthaccess.__auth__.login(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        strategy=strategy,
        ^^^^^^^^^^^^^^^^^^
        persist=persist,
        ^^^^^^^^^^^^^^^^
        system=system,
        ^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 134, in login
    self._netrc()
    ~~~~~~~~~~~^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 285, in _netrc
    authenticated = self._get_credentials(username, password)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 311, in _get_credentials
    token_resp = self._find_or_create_token(username, password)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 333, in _find_or_create_token
    auth_resp = session.post(
        self.EDL_FIND_OR_CREATE_TOKEN_URL,
    ...<3 lines>...
        timeout=10,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\sessions.py", line 637, in post
    return self.request("POST", url, data=data, json=json, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\adapters.py", line 713, in send
    raise ReadTimeout(e, request=request)
requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='urs.earthdata.nasa.gov', port=443): Read timed out. (read timeout=10)
Traceback (most recent call last):
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 464, in _make_request
    self._validate_conn(conn)
    ~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 1093, in _validate_conn
    conn.connect()
    ~~~~~~~~~~~~^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connection.py", line 790, in connect
    sock_and_verified = _ssl_wrap_socket_and_match_hostname(
        sock=sock,
    ...<14 lines>...
        assert_fingerprint=self.assert_fingerprint,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connection.py", line 969, in _ssl_wrap_socket_and_match_hostname
    ssl_sock = ssl_wrap_socket(
        sock=sock,
    ...<8 lines>...
        tls_in_tls=tls_in_tls,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\ssl_.py", line 480, in ssl_wrap_socket
    ssl_sock = _ssl_wrap_socket_impl(sock, context, tls_in_tls, server_hostname)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\ssl_.py", line 524, in _ssl_wrap_socket_impl
    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\ssl.py", line 455, in wrap_socket
    return self.sslsocket_class._create(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sock=sock,
        ^^^^^^^^^^
    ...<5 lines>...
        session=session
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\ssl.py", line 1076, in _create
    self.do_handshake()
    ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\ssl.py", line 1372, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
TimeoutError: _ssl.c:1011: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\adapters.py", line 667, in send
    resp = conn.urlopen(
        method=request.method,
    ...<9 lines>...
        chunked=chunked,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 841, in urlopen
    retries = retries.increment(
        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\retry.py", line 474, in increment
    raise reraise(type(error), error, _stacktrace)
          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\util\util.py", line 39, in reraise
    raise value
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 787, in urlopen
    response = self._make_request(
        conn,
    ...<10 lines>...
        **response_kw,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 488, in _make_request
    raise new_e
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 466, in _make_request
    self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\urllib3\connectionpool.py", line 367, in _raise_timeout
    raise ReadTimeoutError(
        self, url, f"Read timed out. (read timeout={timeout_value})"
    ) from err
urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='urs.earthdata.nasa.gov', port=443): Read timed out. (read timeout=10)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py", line 811, in <module>
    main()
    ~~~~^^
  File "C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py", line 766, in main
    files = fetch_daily_files(date_str, BBOX, DOWNLOAD_DIR)
  File "C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py", line 152, in fetch_daily_files
    earthdata_login_check()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py", line 81, in earthdata_login_check
    session = earthaccess.login()
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\api.py", line 205, in login
    earthaccess.__auth__.login(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        strategy=strategy,
        ^^^^^^^^^^^^^^^^^^
        persist=persist,
        ^^^^^^^^^^^^^^^^
        system=system,
        ^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 134, in login
    self._netrc()
    ~~~~~~~~~~~^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 285, in _netrc
    authenticated = self._get_credentials(username, password)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 311, in _get_credentials
    token_resp = self._find_or_create_token(username, password)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\earthaccess\auth.py", line 333, in _find_or_create_token
    auth_resp = session.post(
        self.EDL_FIND_OR_CREATE_TOKEN_URL,
    ...<3 lines>...
        timeout=10,
    )
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\sessions.py", line 637, in post
    return self.request("POST", url, data=data, json=json, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "C:\Users\23755118\AppData\Local\miniconda3\envs\py3_13\Lib\site-packages\requests\adapters.py", line 713, in send
    raise ReadTimeout(e, request=request)
requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='urs.earthdata.nasa.gov', port=443): Read timed out. (read timeout=10)
================================================ 
Task failed with exit code 1 at Fri 17/10/2025  8:28:16.97 
================================================ 
2025-10-17 08:49:46,081  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-17 08:49:46,102  INFO: Daily mode: Searching for data for 2025-10-16
2025-10-17 08:49:46,103  INFO: Logging in to Earthdata via earthaccess...
2025-10-17 08:49:48,065  INFO: You're now authenticated with NASA Earthdata Login
2025-10-17 08:49:53,039  INFO: Earthdata login OK.
2025-10-17 08:49:53,039  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-17 08:49:53,874  INFO: Granules found: 0
2025-10-17 08:49:54,629  INFO: No results for OLCIS3A_L2_EFR_OC_NRT on 2025-10-16
2025-10-17 08:49:54,630  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-17 08:49:55,401  INFO: Granules found: 0
2025-10-17 08:49:56,302  INFO: No results for OLCIS3B_L2_EFR_OC_NRT on 2025-10-16
2025-10-17 08:49:56,303  INFO: No files downloaded for yesterday. Exiting (no update).
2025-10-17 08:49:59,514  INFO: Chromium init'ed with kwargs {}
2025-10-17 08:49:59,516  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-17 08:49:59,520  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp1ad7cqam.
2025-10-17 08:49:59,524  INFO: Opening browser.
2025-10-17 08:49:59,527  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpmdmoo36p.
2025-10-17 08:49:59,528  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpmdmoo36p
2025-10-17 08:50:01,397  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp1ad7cqam/index.html
2025-10-17 08:50:01,398  INFO: Waiting on all navigates
2025-10-17 08:50:03,828  INFO: All navigates done, putting them all in queue.
2025-10-17 08:50:03,831  INFO: Getting tab from queue (has 1)
2025-10-17 08:50:03,831  INFO: Got E378
2025-10-17 08:50:03,832  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-17 08:50:03,832  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-17 08:50:04,030  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-17 08:50:04,031  INFO: Reloading tab E378 before return.
2025-10-17 08:50:04,238  INFO: Putting tab E378 back (queue size: 0).
2025-10-17 08:50:04,238  INFO: Waiting for all cleanups to finish.
2025-10-17 08:50:04,239  INFO: Exiting Kaleido
2025-10-17 08:50:04,243  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:04,244  INFO: shutil.rmtree worked.
2025-10-17 08:50:04,245  INFO: Cancelling tasks.
2025-10-17 08:50:04,245  INFO: Exiting Kaleido/Choreo
2025-10-17 08:50:04,245  INFO: Closing browser.
2025-10-17 08:50:04,249  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:04,250  INFO: shutil.rmtree worked.
2025-10-17 08:50:04,251  INFO: Cancelling tasks.
2025-10-17 08:50:04,251  INFO: Exiting Kaleido/Choreo
2025-10-17 08:50:04,252  INFO: Closing browser.
2025-10-17 08:50:04,900  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:04,901  INFO: shutil.rmtree worked.
2025-10-17 08:50:04,932  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-17 08:50:04,954  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:04,954  INFO: shutil.rmtree worked.
2025-10-17 08:50:05,126  INFO: Chromium init'ed with kwargs {}
2025-10-17 08:50:05,127  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-17 08:50:05,128  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp74jr_khl.
2025-10-17 08:50:05,131  INFO: Opening browser.
2025-10-17 08:50:05,134  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpsth94ekt.
2025-10-17 08:50:05,134  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpsth94ekt
2025-10-17 08:50:06,172  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp74jr_khl/index.html
2025-10-17 08:50:06,173  INFO: Waiting on all navigates
2025-10-17 08:50:08,406  INFO: All navigates done, putting them all in queue.
2025-10-17 08:50:08,408  INFO: Getting tab from queue (has 1)
2025-10-17 08:50:08,408  INFO: Got 92E7
2025-10-17 08:50:08,408  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-17 08:50:08,409  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-17 08:50:08,656  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-17 08:50:08,657  INFO: Reloading tab 92E7 before return.
2025-10-17 08:50:08,905  INFO: Putting tab 92E7 back (queue size: 0).
2025-10-17 08:50:08,906  INFO: Waiting for all cleanups to finish.
2025-10-17 08:50:08,906  INFO: Exiting Kaleido
2025-10-17 08:50:08,907  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:08,908  INFO: shutil.rmtree worked.
2025-10-17 08:50:08,908  INFO: Cancelling tasks.
2025-10-17 08:50:08,908  INFO: Exiting Kaleido/Choreo
2025-10-17 08:50:08,908  INFO: Closing browser.
2025-10-17 08:50:08,911  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:08,912  INFO: shutil.rmtree worked.
2025-10-17 08:50:08,912  INFO: Cancelling tasks.
2025-10-17 08:50:08,912  INFO: Exiting Kaleido/Choreo
2025-10-17 08:50:08,912  INFO: Closing browser.
2025-10-17 08:50:09,179  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:09,180  INFO: shutil.rmtree worked.
2025-10-17 08:50:09,184  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-17 08:50:09,202  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 08:50:09,203  INFO: shutil.rmtree worked.
2025-10-17 08:50:09,267  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-17 08:50:09,268  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-17 08:50:11,096  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-16
2025-10-17 08:50:11,204  INFO: Current branch: main
2025-10-17 08:50:13,632  INFO: Git push successful to main
2025-10-17 08:50:13,632  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-17 08:50:13,635  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-17 08:50:13,635  INFO: === Pipeline finished ===
2025-10-17 10:31:07,023  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-17 10:31:07,031  INFO: Daily mode: Searching for data for 2025-10-16
2025-10-17 10:31:07,031  INFO: Logging in to Earthdata via earthaccess...
2025-10-17 10:31:08,338  INFO: You're now authenticated with NASA Earthdata Login
2025-10-17 10:31:13,303  INFO: Earthdata login OK.
2025-10-17 10:31:13,304  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-17 10:31:14,195  INFO: Granules found: 0
2025-10-17 10:31:14,968  INFO: No results for OLCIS3A_L2_EFR_OC_NRT on 2025-10-16
2025-10-17 10:31:14,969  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-17 10:31:15,716  INFO: Granules found: 0
2025-10-17 10:31:16,465  INFO: No results for OLCIS3B_L2_EFR_OC_NRT on 2025-10-16
2025-10-17 10:31:16,466  INFO: No files downloaded for yesterday. Exiting (no update).
2025-10-17 10:31:18,410  INFO: Chromium init'ed with kwargs {}
2025-10-17 10:31:18,411  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-17 10:31:18,413  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp4i5y_64_.
2025-10-17 10:31:18,414  INFO: Opening browser.
2025-10-17 10:31:18,416  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpkm1ehn_r.
2025-10-17 10:31:18,416  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpkm1ehn_r
2025-10-17 10:31:19,954  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp4i5y_64_/index.html
2025-10-17 10:31:19,954  INFO: Waiting on all navigates
2025-10-17 10:31:21,626  INFO: All navigates done, putting them all in queue.
2025-10-17 10:31:21,628  INFO: Getting tab from queue (has 1)
2025-10-17 10:31:21,628  INFO: Got E3A5
2025-10-17 10:31:21,629  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-17 10:31:21,629  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-17 10:31:21,719  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-17 10:31:21,720  INFO: Reloading tab E3A5 before return.
2025-10-17 10:31:21,849  INFO: Putting tab E3A5 back (queue size: 0).
2025-10-17 10:31:21,850  INFO: Waiting for all cleanups to finish.
2025-10-17 10:31:21,850  INFO: Exiting Kaleido
2025-10-17 10:31:21,851  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:21,851  INFO: shutil.rmtree worked.
2025-10-17 10:31:21,852  INFO: Cancelling tasks.
2025-10-17 10:31:21,852  INFO: Exiting Kaleido/Choreo
2025-10-17 10:31:21,852  INFO: Closing browser.
2025-10-17 10:31:21,855  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:21,856  INFO: shutil.rmtree worked.
2025-10-17 10:31:21,857  INFO: Cancelling tasks.
2025-10-17 10:31:21,857  INFO: Exiting Kaleido/Choreo
2025-10-17 10:31:21,857  INFO: Closing browser.
2025-10-17 10:31:22,011  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:22,011  INFO: shutil.rmtree worked.
2025-10-17 10:31:22,029  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-17 10:31:22,038  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:22,039  INFO: shutil.rmtree worked.
2025-10-17 10:31:22,113  INFO: Chromium init'ed with kwargs {}
2025-10-17 10:31:22,113  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-17 10:31:22,114  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpp82v58i7.
2025-10-17 10:31:22,114  INFO: Opening browser.
2025-10-17 10:31:22,115  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpuwzmaw2b.
2025-10-17 10:31:22,115  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpuwzmaw2b
2025-10-17 10:31:22,659  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpp82v58i7/index.html
2025-10-17 10:31:22,660  INFO: Waiting on all navigates
2025-10-17 10:31:23,889  INFO: All navigates done, putting them all in queue.
2025-10-17 10:31:23,890  INFO: Getting tab from queue (has 1)
2025-10-17 10:31:23,890  INFO: Got 72E4
2025-10-17 10:31:23,890  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-17 10:31:23,890  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-17 10:31:23,972  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-17 10:31:23,973  INFO: Reloading tab 72E4 before return.
2025-10-17 10:31:24,087  INFO: Putting tab 72E4 back (queue size: 0).
2025-10-17 10:31:24,087  INFO: Waiting for all cleanups to finish.
2025-10-17 10:31:24,087  INFO: Exiting Kaleido
2025-10-17 10:31:24,088  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:24,088  INFO: shutil.rmtree worked.
2025-10-17 10:31:24,088  INFO: Cancelling tasks.
2025-10-17 10:31:24,088  INFO: Exiting Kaleido/Choreo
2025-10-17 10:31:24,088  INFO: Closing browser.
2025-10-17 10:31:24,090  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:24,090  INFO: shutil.rmtree worked.
2025-10-17 10:31:24,090  INFO: Cancelling tasks.
2025-10-17 10:31:24,090  INFO: Exiting Kaleido/Choreo
2025-10-17 10:31:24,091  INFO: Closing browser.
2025-10-17 10:31:24,254  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:24,254  INFO: shutil.rmtree worked.
2025-10-17 10:31:24,269  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-17 10:31:24,280  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 10:31:24,280  INFO: shutil.rmtree worked.
2025-10-17 10:31:24,383  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-17 10:31:24,383  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-17 10:31:25,698  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-16
2025-10-17 10:31:25,759  INFO: Current branch: main
2025-10-17 10:31:27,504  INFO: Git push successful to main
2025-10-17 10:31:27,505  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-17 10:31:27,508  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-17 10:31:27,508  INFO: === Pipeline finished ===
2025-10-17 15:39:33,800  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-17 15:39:33,822  INFO: Daily mode: Searching for data for 2025-10-16
2025-10-17 15:39:33,823  INFO: Logging in to Earthdata via earthaccess...
2025-10-17 15:39:35,236  INFO: You're now authenticated with NASA Earthdata Login
2025-10-17 15:39:40,211  INFO: Earthdata login OK.
2025-10-17 15:39:40,211  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-17 15:39:41,156  INFO: Granules found: 1
2025-10-17 15:39:42,044  INFO: Found 1 items for OLCIS3A_L2_EFR_OC_NRT on 2025-10-16. Downloading...
2025-10-17 15:39:42,045  INFO:  Getting 1 granules, approx download size: 0.09 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 2857.16it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:12<00:00, 12.32s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:12<00:00, 12.32s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 29959.31it/s]
2025-10-17 15:39:55,377  INFO: Download directory now has 26 .nc files (may include older files).
2025-10-17 15:39:55,378  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-16 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-17 15:39:56,157  INFO: Granules found: 0
2025-10-17 15:39:56,907  INFO: No results for OLCIS3B_L2_EFR_OC_NRT on 2025-10-16
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:00,852  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:02,453  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> date 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:04,057  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:05,854  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> date 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:07,453  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:09,051  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> date 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:10,659  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:12,193  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> date 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:13,736  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> date 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:15,331  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> date 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:16,910  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> date 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:18,557  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> date 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:20,190  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> date 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:21,601  INFO: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> date 2025-10-16, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:23,200  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> date 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:24,731  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:26,331  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> date 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:28,180  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> date 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:29,796  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:31,368  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> date 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:33,186  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> date 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:35,066  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:37,596  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> date 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-17 15:40:39,774  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> date 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:41,583  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:264: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:226: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-17 15:40:43,270  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> date 2025-10-15, chl=nan
2025-10-17 15:40:43,297  INFO: Timeseries store updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (rows: 16)
2025-10-17 15:40:45,138  INFO: Chromium init'ed with kwargs {}
2025-10-17 15:40:45,139  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-17 15:40:45,141  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpwgss0qe9.
2025-10-17 15:40:45,143  INFO: Opening browser.
2025-10-17 15:40:45,144  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmprq36hb57.
2025-10-17 15:40:45,145  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmprq36hb57
2025-10-17 15:40:46,191  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpwgss0qe9/index.html
2025-10-17 15:40:46,192  INFO: Waiting on all navigates
2025-10-17 15:40:48,716  INFO: All navigates done, putting them all in queue.
2025-10-17 15:40:48,718  INFO: Getting tab from queue (has 1)
2025-10-17 15:40:48,719  INFO: Got 119D
2025-10-17 15:40:48,719  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-17 15:40:48,719  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-17 15:40:48,834  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-17 15:40:48,835  INFO: Reloading tab 119D before return.
2025-10-17 15:40:48,956  INFO: Putting tab 119D back (queue size: 0).
2025-10-17 15:40:48,956  INFO: Waiting for all cleanups to finish.
2025-10-17 15:40:48,956  INFO: Exiting Kaleido
2025-10-17 15:40:48,958  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:48,958  INFO: shutil.rmtree worked.
2025-10-17 15:40:48,958  INFO: Cancelling tasks.
2025-10-17 15:40:48,958  INFO: Exiting Kaleido/Choreo
2025-10-17 15:40:48,958  INFO: Closing browser.
2025-10-17 15:40:48,961  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:48,961  INFO: shutil.rmtree worked.
2025-10-17 15:40:48,961  INFO: Cancelling tasks.
2025-10-17 15:40:48,962  INFO: Exiting Kaleido/Choreo
2025-10-17 15:40:48,962  INFO: Closing browser.
2025-10-17 15:40:49,165  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:49,166  INFO: shutil.rmtree worked.
2025-10-17 15:40:49,186  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-17 15:40:49,214  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:49,215  INFO: shutil.rmtree worked.
2025-10-17 15:40:49,474  INFO: Chromium init'ed with kwargs {}
2025-10-17 15:40:49,475  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-17 15:40:49,476  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpkhfbzx_2.
2025-10-17 15:40:49,477  INFO: Opening browser.
2025-10-17 15:40:49,480  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpqi9phlq4.
2025-10-17 15:40:49,480  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpqi9phlq4
2025-10-17 15:40:50,314  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpkhfbzx_2/index.html
2025-10-17 15:40:50,314  INFO: Waiting on all navigates
2025-10-17 15:40:52,675  INFO: All navigates done, putting them all in queue.
2025-10-17 15:40:52,678  INFO: Getting tab from queue (has 1)
2025-10-17 15:40:52,679  INFO: Got C0EB
2025-10-17 15:40:52,679  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-17 15:40:52,679  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-17 15:40:52,845  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-17 15:40:52,846  INFO: Reloading tab C0EB before return.
2025-10-17 15:40:52,993  INFO: Putting tab C0EB back (queue size: 0).
2025-10-17 15:40:52,993  INFO: Waiting for all cleanups to finish.
2025-10-17 15:40:52,994  INFO: Exiting Kaleido
2025-10-17 15:40:52,995  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:52,995  INFO: shutil.rmtree worked.
2025-10-17 15:40:52,995  INFO: Cancelling tasks.
2025-10-17 15:40:52,995  INFO: Exiting Kaleido/Choreo
2025-10-17 15:40:52,995  INFO: Closing browser.
2025-10-17 15:40:52,998  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:52,998  INFO: shutil.rmtree worked.
2025-10-17 15:40:52,999  INFO: Cancelling tasks.
2025-10-17 15:40:52,999  INFO: Exiting Kaleido/Choreo
2025-10-17 15:40:52,999  INFO: Closing browser.
2025-10-17 15:40:53,235  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:53,235  INFO: shutil.rmtree worked.
2025-10-17 15:40:53,259  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-17 15:40:53,289  INFO: TemporaryDirectory.cleanup() worked.
2025-10-17 15:40:53,290  INFO: shutil.rmtree worked.
2025-10-17 15:40:53,444  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-17 15:40:53,444  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-17 15:40:54,881  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-16
2025-10-17 15:40:54,959  INFO: Current branch: main
2025-10-17 15:40:57,051  INFO: Git push successful to main
2025-10-17 15:40:57,052  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-17 15:40:57,056  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-17 15:40:57,056  INFO: === Pipeline finished ===
2025-10-20 09:17:47,350  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-20 09:17:47,367  INFO: Daily mode: Searching for data for 2025-10-19
2025-10-20 09:17:47,368  INFO: Logging in to Earthdata via earthaccess...
2025-10-20 09:17:48,734  INFO: You're now authenticated with NASA Earthdata Login
2025-10-20 09:17:53,788  INFO: Earthdata login OK.
2025-10-20 09:17:53,788  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-19 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-20 09:17:55,031  INFO: Granules found: 0
2025-10-20 09:17:55,935  INFO: No results for OLCIS3A_L2_EFR_OC_NRT on 2025-10-19
2025-10-20 09:17:55,936  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-19 in bbox (115.4, -32.65, 115.8, -31.7) ...
2025-10-20 09:17:56,784  INFO: Granules found: 0
2025-10-20 09:17:57,523  INFO: No results for OLCIS3B_L2_EFR_OC_NRT on 2025-10-19
2025-10-20 09:17:57,524  INFO: No files downloaded for yesterday. Exiting (no update).
2025-10-20 09:17:59,025  INFO: Chromium init'ed with kwargs {}
2025-10-20 09:17:59,026  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-20 09:17:59,029  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpkiqnj_im.
2025-10-20 09:17:59,030  INFO: Opening browser.
2025-10-20 09:17:59,032  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpjole7prb.
2025-10-20 09:17:59,032  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpjole7prb
2025-10-20 09:18:00,667  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpkiqnj_im/index.html
2025-10-20 09:18:00,668  INFO: Waiting on all navigates
2025-10-20 09:18:02,534  INFO: All navigates done, putting them all in queue.
2025-10-20 09:18:02,536  INFO: Getting tab from queue (has 1)
2025-10-20 09:18:02,536  INFO: Got 1A8F
2025-10-20 09:18:02,536  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-20 09:18:02,536  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-20 09:18:02,628  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-20 09:18:02,629  INFO: Reloading tab 1A8F before return.
2025-10-20 09:18:02,755  INFO: Putting tab 1A8F back (queue size: 0).
2025-10-20 09:18:02,756  INFO: Waiting for all cleanups to finish.
2025-10-20 09:18:02,756  INFO: Exiting Kaleido
2025-10-20 09:18:02,757  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:02,758  INFO: shutil.rmtree worked.
2025-10-20 09:18:02,758  INFO: Cancelling tasks.
2025-10-20 09:18:02,759  INFO: Exiting Kaleido/Choreo
2025-10-20 09:18:02,759  INFO: Closing browser.
2025-10-20 09:18:02,762  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:02,762  INFO: shutil.rmtree worked.
2025-10-20 09:18:02,763  INFO: Cancelling tasks.
2025-10-20 09:18:02,763  INFO: Exiting Kaleido/Choreo
2025-10-20 09:18:02,764  INFO: Closing browser.
2025-10-20 09:18:02,960  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:02,960  INFO: shutil.rmtree worked.
2025-10-20 09:18:02,980  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-20 09:18:03,043  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:03,044  INFO: shutil.rmtree worked.
2025-10-20 09:18:03,510  INFO: Chromium init'ed with kwargs {}
2025-10-20 09:18:03,510  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-20 09:18:03,511  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp_l31pq2p.
2025-10-20 09:18:03,511  INFO: Opening browser.
2025-10-20 09:18:03,513  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp3g74b_l3.
2025-10-20 09:18:03,513  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp3g74b_l3
2025-10-20 09:18:04,113  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp_l31pq2p/index.html
2025-10-20 09:18:04,113  INFO: Waiting on all navigates
2025-10-20 09:18:05,485  INFO: All navigates done, putting them all in queue.
2025-10-20 09:18:05,486  INFO: Getting tab from queue (has 1)
2025-10-20 09:18:05,486  INFO: Got 1022
2025-10-20 09:18:05,487  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-20 09:18:05,487  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-20 09:18:05,599  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-20 09:18:05,600  INFO: Reloading tab 1022 before return.
2025-10-20 09:18:05,713  INFO: Putting tab 1022 back (queue size: 0).
2025-10-20 09:18:05,713  INFO: Waiting for all cleanups to finish.
2025-10-20 09:18:05,713  INFO: Exiting Kaleido
2025-10-20 09:18:05,714  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:05,714  INFO: shutil.rmtree worked.
2025-10-20 09:18:05,714  INFO: Cancelling tasks.
2025-10-20 09:18:05,714  INFO: Exiting Kaleido/Choreo
2025-10-20 09:18:05,714  INFO: Closing browser.
2025-10-20 09:18:05,716  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:05,716  INFO: shutil.rmtree worked.
2025-10-20 09:18:05,717  INFO: Cancelling tasks.
2025-10-20 09:18:05,717  INFO: Exiting Kaleido/Choreo
2025-10-20 09:18:05,717  INFO: Closing browser.
2025-10-20 09:18:05,880  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:05,880  INFO: shutil.rmtree worked.
2025-10-20 09:18:05,903  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-20 09:18:05,925  INFO: TemporaryDirectory.cleanup() worked.
2025-10-20 09:18:05,925  INFO: shutil.rmtree worked.
2025-10-20 09:18:06,116  INFO: Full interactive plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-20 09:18:06,117  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:70: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-20 09:18:07,448  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-19
2025-10-20 09:18:07,524  INFO: Current branch: main
2025-10-20 09:18:09,779  INFO: Git push successful to main
2025-10-20 09:18:09,779  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:562: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:566: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-20 09:18:09,783  INFO: Cleanup done. Removed 0 files older than 30 days.
2025-10-20 09:18:09,783  INFO: === Pipeline finished ===
2025-10-21 13:54:29,298  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-21 13:54:29,326  INFO: Daily mode: Searching for data for 2025-10-20
2025-10-21 13:54:29,327  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:54:30,657  INFO: You're now authenticated with NASA Earthdata Login
2025-10-21 13:54:35,803  INFO: Earthdata login OK.
2025-10-21 13:54:35,803  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-20...
2025-10-21 13:54:36,679  INFO: Granules found: 2
2025-10-21 13:54:37,622  INFO: Found 2 items. Downloading...
2025-10-21 13:54:37,623  INFO:  Getting 2 granules, approx download size: 0.17 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 2447.80it/s]
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | :  50%|#####     | 1/2 [00:13<00:13, 13.54s/it]PROCESSING TASKS | : 100%|##########| 2/2 [00:18<00:00,  8.53s/it]PROCESSING TASKS | : 100%|##########| 2/2 [00:18<00:00,  9.28s/it]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 45590.26it/s]
2025-10-21 13:54:57,194  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-20...
2025-10-21 13:54:57,959  INFO: Granules found: 0
2025-10-21 13:54:58,719  INFO: No results for OLCIS3B_L2_EFR_OC_NRT
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:02,425  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:04,185  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:05,784  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:07,280  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:08,736  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:10,277  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:11,814  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:13,417  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:15,765  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:17,243  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:18,851  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:20,381  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:21,962  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:23,457  INFO: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:24,999  INFO: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:26,370  INFO: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:27,867  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:29,411  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:30,941  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:32,411  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:33,825  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:35,314  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:36,781  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:38,241  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:39,727  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:55:41,251  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:42,674  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:55:44,179  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=nan
2025-10-21 13:55:44,218  INFO: Timeseries updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (17 rows)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:150: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  gap_df = pd.concat([gap_df, new_row], ignore_index=True)
2025-10-21 13:55:44,244  INFO: 
============================================================
2025-10-21 13:55:44,244  INFO: STARTING GAP DETECTION
2025-10-21 13:55:44,244  INFO: ============================================================
2025-10-21 13:55:44,244  INFO: === Starting gap detection and filling ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  end_date = pd.to_datetime(end_date_str) if end_date_str else datetime.utcnow()
2025-10-21 13:55:44,265  INFO: Found 4 missing days in timeseries
2025-10-21 13:55:44,283  INFO: 
--- Checking gap for 2025-10-17 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-21 13:55:44,285  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:55:46,852  INFO: Earthdata login OK.
2025-10-21 13:55:47,697  INFO: Granules found: 0
2025-10-21 13:55:48,447  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-17
2025-10-21 13:55:49,202  INFO: Granules found: 1
2025-10-21 13:55:49,971  INFO:   OLCIS3B_L2_EFR_OC_NRT: 1 granules found for 2025-10-17
2025-10-21 13:55:49,971  INFO:   Data available for 2025-10-17! Downloading...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-21 13:55:49,980  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:55:52,441  INFO: Earthdata login OK.
2025-10-21 13:55:52,442  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-17...
2025-10-21 13:55:53,169  INFO: Granules found: 0
2025-10-21 13:55:53,931  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-21 13:55:53,931  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-17...
2025-10-21 13:55:54,671  INFO: Granules found: 1
2025-10-21 13:55:55,406  INFO: Found 1 items. Downloading...
2025-10-21 13:55:55,410  INFO:  Getting 1 granules, approx download size: 0.24 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1874.13it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:20<00:00, 20.47s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:20<00:00, 20.47s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 21620.12it/s]
2025-10-21 13:56:16,888  INFO:   Downloaded 29 files
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:18,479  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:20,042  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:21,574  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:23,073  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:24,547  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:26,050  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:27,518  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:56:28,995  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:30,561  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:56:32,131  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:56:33,820  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:35,450  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:56:37,148  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:38,877  INFO: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:40,430  INFO: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:42,466  INFO: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:56:44,674  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:46,704  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:48,437  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:56:50,515  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:52,177  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:54,065  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:56,110  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:57,798  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:56:59,662  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:57:01,622  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:03,415  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:05,244  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:06,999  INFO: Processed S3B_OLCI_EFRNT.20251017T020814.L2.OC.NRT.nc -> 2025-10-17, chl=nan
2025-10-21 13:57:07,011  INFO: Timeseries updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (18 rows)
2025-10-21 13:57:07,047  INFO:   \u2713 Successfully filled gap for 2025-10-17
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-21 13:57:09,070  INFO: 
--- Checking gap for 2025-10-18 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-21 13:57:09,072  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:57:11,668  INFO: Earthdata login OK.
2025-10-21 13:57:12,537  INFO: Granules found: 0
2025-10-21 13:57:13,272  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-18
2025-10-21 13:57:14,010  INFO: Granules found: 1
2025-10-21 13:57:14,752  INFO:   OLCIS3B_L2_EFR_OC_NRT: 1 granules found for 2025-10-18
2025-10-21 13:57:14,752  INFO:   Data available for 2025-10-18! Downloading...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-21 13:57:14,770  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:57:17,270  INFO: Earthdata login OK.
2025-10-21 13:57:17,270  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-18...
2025-10-21 13:57:18,055  INFO: Granules found: 0
2025-10-21 13:57:18,803  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-21 13:57:18,803  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-18...
2025-10-21 13:57:19,534  INFO: Granules found: 1
2025-10-21 13:57:20,267  INFO: Found 1 items. Downloading...
2025-10-21 13:57:20,267  INFO:  Getting 1 granules, approx download size: 0.09 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 766.36it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:10<00:00, 10.26s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:10<00:00, 10.26s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 24244.53it/s]
2025-10-21 13:57:31,531  INFO:   Downloaded 30 files
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:33,066  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:34,627  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:36,227  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:37,710  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:39,124  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:40,593  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:42,083  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:57:43,579  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:45,042  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:57:46,485  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:57:47,916  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:49,404  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:57:50,896  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:52,302  INFO: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:53,681  INFO: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:55,218  INFO: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:57:56,711  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:58,165  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:57:59,672  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:58:01,257  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:02,722  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:04,379  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:05,887  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:07,353  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:08,856  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:58:10,470  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:11,941  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:13,440  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:15,042  INFO: Processed S3B_OLCI_EFRNT.20251017T020814.L2.OC.NRT.nc -> 2025-10-17, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:58:16,503  INFO: Processed S3B_OLCI_EFRNT.20251018T014203.L2.OC.NRT.nc -> 2025-10-18, chl=nan
2025-10-21 13:58:16,515  INFO: Timeseries updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (19 rows)
2025-10-21 13:58:16,544  INFO:   \u2713 Successfully filled gap for 2025-10-18
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-21 13:58:18,565  INFO: 
--- Checking gap for 2025-10-19 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-21 13:58:18,567  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:58:21,121  INFO: Earthdata login OK.
2025-10-21 13:58:21,954  INFO: Granules found: 1
2025-10-21 13:58:22,831  INFO:   OLCIS3A_L2_EFR_OC_NRT: 1 granules found for 2025-10-19
2025-10-21 13:58:23,565  INFO: Granules found: 1
2025-10-21 13:58:24,505  INFO:   OLCIS3B_L2_EFR_OC_NRT: 1 granules found for 2025-10-19
2025-10-21 13:58:24,505  INFO:   Data available for 2025-10-19! Downloading...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-21 13:58:24,526  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 13:58:27,026  INFO: Earthdata login OK.
2025-10-21 13:58:27,026  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-19...
2025-10-21 13:58:27,780  INFO: Granules found: 1
2025-10-21 13:58:28,550  INFO: Found 1 items. Downloading...
2025-10-21 13:58:28,550  INFO:  Getting 1 granules, approx download size: 0.15 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1374.73it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:13<00:00, 13.91s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:13<00:00, 13.91s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 27776.85it/s]
2025-10-21 13:58:43,463  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-19...
2025-10-21 13:58:44,204  INFO: Granules found: 1
2025-10-21 13:58:44,979  INFO: Found 1 items. Downloading...
2025-10-21 13:58:44,979  INFO:  Getting 1 granules, approx download size: 0.23 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1830.77it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:21<00:00, 21.42s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:21<00:00, 21.42s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 16256.99it/s]
2025-10-21 13:59:07,401  INFO:   Downloaded 32 files
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:08,967  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:10,511  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:12,073  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:13,652  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:15,163  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:16,742  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:18,289  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:19,982  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:21,612  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:23,164  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:24,665  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:26,208  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:27,859  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:29,373  INFO: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:30,900  INFO: Processed S3A_OLCI_EFRNT.20251019T015436.L2.OC.NRT.nc -> 2025-10-19, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:32,378  INFO: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:33,960  INFO: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:35,504  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:37,161  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:38,699  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:40,179  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:41,609  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:43,148  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:44,704  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:46,215  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:47,658  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 13:59:49,196  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:50,655  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:52,120  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:53,560  INFO: Processed S3B_OLCI_EFRNT.20251017T020814.L2.OC.NRT.nc -> 2025-10-17, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:54,963  INFO: Processed S3B_OLCI_EFRNT.20251018T014203.L2.OC.NRT.nc -> 2025-10-18, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 13:59:56,373  INFO: Processed S3B_OLCI_EFRNT.20251019T011852.L2.OC.NRT.nc -> 2025-10-19, chl=nan
2025-10-21 13:59:56,386  INFO: Timeseries updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (20 rows)
2025-10-21 13:59:56,426  INFO:   \u2713 Successfully filled gap for 2025-10-19
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-21 13:59:58,449  INFO: 
--- Checking gap for 2025-10-21 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-21 13:59:58,450  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 14:00:01,001  INFO: Earthdata login OK.
2025-10-21 14:00:01,831  INFO: Granules found: 0
2025-10-21 14:00:02,836  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-21 14:00:03,586  INFO: Granules found: 0
2025-10-21 14:00:04,365  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-21 14:00:04,366  INFO:   No data available for 2025-10-21
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-21 14:00:06,387  INFO: 
=== Gap filling complete: 3 filled, 4 checked ===
2025-10-21 14:00:06,387  INFO: Gap detection complete: 3 gaps filled
2025-10-21 14:00:06,403  INFO: 
============================================================
2025-10-21 14:00:06,403  INFO: GAP SUMMARY REPORT
2025-10-21 14:00:06,403  INFO: ============================================================
2025-10-21 14:00:06,412  INFO: 
Gap Status Distribution:
2025-10-21 14:00:06,412  INFO:   filled: 4
2025-10-21 14:00:06,412  INFO:   unavailable: 1
2025-10-21 14:00:06,414  INFO: 
Unfilled gaps: 1
2025-10-21 14:00:06,415  INFO:   Date range: 2025-10-21 to 2025-10-21
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:786: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  recent = gap_df[gap_df['last_checked'] > datetime.utcnow() - timedelta(hours=24)]
2025-10-21 14:00:06,415  INFO: 
Gaps checked in last 24 hours: 5
2025-10-21 14:00:06,415  INFO: ============================================================

2025-10-21 14:00:08,234  INFO: Chromium init'ed with kwargs {}
2025-10-21 14:00:08,235  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-21 14:00:08,237  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpevrg_bd7.
2025-10-21 14:00:08,238  INFO: Opening browser.
2025-10-21 14:00:08,240  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpw7e__vxs.
2025-10-21 14:00:08,240  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpw7e__vxs
2025-10-21 14:00:09,139  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpevrg_bd7/index.html
2025-10-21 14:00:09,140  INFO: Waiting on all navigates
2025-10-21 14:00:11,540  INFO: All navigates done, putting them all in queue.
2025-10-21 14:00:11,542  INFO: Getting tab from queue (has 1)
2025-10-21 14:00:11,542  INFO: Got 2377
2025-10-21 14:00:11,542  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-21 14:00:11,543  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-21 14:00:11,725  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-21 14:00:11,726  INFO: Reloading tab 2377 before return.
2025-10-21 14:00:11,982  INFO: Putting tab 2377 back (queue size: 0).
2025-10-21 14:00:11,983  INFO: Waiting for all cleanups to finish.
2025-10-21 14:00:11,983  INFO: Exiting Kaleido
2025-10-21 14:00:11,984  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:11,985  INFO: shutil.rmtree worked.
2025-10-21 14:00:11,985  INFO: Cancelling tasks.
2025-10-21 14:00:11,985  INFO: Exiting Kaleido/Choreo
2025-10-21 14:00:11,986  INFO: Closing browser.
2025-10-21 14:00:11,995  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:11,995  INFO: shutil.rmtree worked.
2025-10-21 14:00:11,996  INFO: Cancelling tasks.
2025-10-21 14:00:11,996  INFO: Exiting Kaleido/Choreo
2025-10-21 14:00:11,996  INFO: Closing browser.
2025-10-21 14:00:12,271  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:12,271  INFO: shutil.rmtree worked.
2025-10-21 14:00:12,276  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-21 14:00:12,292  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:12,293  INFO: shutil.rmtree worked.
2025-10-21 14:00:12,397  INFO: Chromium init'ed with kwargs {}
2025-10-21 14:00:12,397  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-21 14:00:12,398  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpssv05_0e.
2025-10-21 14:00:12,399  INFO: Opening browser.
2025-10-21 14:00:12,401  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp6xdm9zx0.
2025-10-21 14:00:12,401  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp6xdm9zx0
2025-10-21 14:00:13,225  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpssv05_0e/index.html
2025-10-21 14:00:13,226  INFO: Waiting on all navigates
2025-10-21 14:00:15,156  INFO: All navigates done, putting them all in queue.
2025-10-21 14:00:15,158  INFO: Getting tab from queue (has 1)
2025-10-21 14:00:15,158  INFO: Got 6B54
2025-10-21 14:00:15,158  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-21 14:00:15,158  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-21 14:00:15,296  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-21 14:00:15,297  INFO: Reloading tab 6B54 before return.
2025-10-21 14:00:15,454  INFO: Putting tab 6B54 back (queue size: 0).
2025-10-21 14:00:15,454  INFO: Waiting for all cleanups to finish.
2025-10-21 14:00:15,454  INFO: Exiting Kaleido
2025-10-21 14:00:15,456  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:15,457  INFO: shutil.rmtree worked.
2025-10-21 14:00:15,457  INFO: Cancelling tasks.
2025-10-21 14:00:15,457  INFO: Exiting Kaleido/Choreo
2025-10-21 14:00:15,457  INFO: Closing browser.
2025-10-21 14:00:15,460  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:15,460  INFO: shutil.rmtree worked.
2025-10-21 14:00:15,461  INFO: Cancelling tasks.
2025-10-21 14:00:15,461  INFO: Exiting Kaleido/Choreo
2025-10-21 14:00:15,461  INFO: Closing browser.
2025-10-21 14:00:15,731  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:15,731  INFO: shutil.rmtree worked.
2025-10-21 14:00:15,736  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-21 14:00:15,752  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:00:15,752  INFO: shutil.rmtree worked.
2025-10-21 14:00:15,864  INFO: Full plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-21 14:00:15,864  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-21 14:00:17,041  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-20
2025-10-21 14:00:17,117  INFO: Current branch: main
2025-10-21 14:00:19,322  INFO: Git push successful to main
2025-10-21 14:00:19,322  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:630: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:637: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-21 14:00:19,325  INFO: Cleanup done. Removed 0 files (excluding .nc)
2025-10-21 14:00:19,325  INFO: === Pipeline finished ===
2025-10-21 14:27:02,995  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-21 14:27:03,014  INFO: Daily mode: Searching for data for 2025-10-20
2025-10-21 14:27:03,014  INFO: Logging in to Earthdata via earthaccess...
2025-10-21 14:27:04,623  INFO: You're now authenticated with NASA Earthdata Login
2025-10-21 14:27:09,882  INFO: Earthdata login OK.
2025-10-21 14:27:09,882  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-20...
2025-10-21 14:27:10,935  INFO: Granules found: 2
2025-10-21 14:27:11,758  INFO: Found 2 items. Downloading...
2025-10-21 14:27:11,760  INFO:  Getting 2 granules, approx download size: 0.17 GB
QUEUEING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]2025-10-21 14:27:11,767  INFO: File S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc already downloaded
QUEUEING TASKS | : 100%|##########| 2/2 [00:00<00:00, 2002.53it/s]
2025-10-21 14:27:11,768  INFO: File S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc already downloaded
PROCESSING TASKS | :   0%|          | 0/2 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 2/2 [00:00<00:00, 22982.49it/s]
COLLECTING RESULTS | :   0%|          | 0/2 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 2/2 [00:00<00:00, 28339.89it/s]
2025-10-21 14:27:12,772  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-20...
2025-10-21 14:27:13,618  INFO: Granules found: 0
2025-10-21 14:27:14,424  INFO: No results for OLCIS3B_L2_EFR_OC_NRT
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:18,001  INFO: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:19,828  INFO: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:21,711  INFO: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:23,616  INFO: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:25,388  INFO: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:27,058  INFO: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:28,739  INFO: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:27:30,491  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.869588375091553
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:32,208  INFO: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:27:33,881  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.501234531402588
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:27:35,500  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.998786211013794
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:37,177  INFO: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:27:38,812  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.413597583770752
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:40,406  INFO: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:42,089  INFO: Processed S3A_OLCI_EFRNT.20251019T015436.L2.OC.NRT.nc -> 2025-10-19, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:43,684  INFO: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:45,333  INFO: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:27:46,971  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.720492839813232
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:48,589  INFO: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:50,236  INFO: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:27:51,905  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.071468353271484
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:53,478  INFO: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:55,120  INFO: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:56,777  INFO: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:27:58,383  INFO: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:28:00,023  INFO: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-21 14:28:01,650  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476481914520264
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:28:03,287  INFO: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:28:04,995  INFO: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:28:06,717  INFO: Processed S3B_OLCI_EFRNT.20251017T020814.L2.OC.NRT.nc -> 2025-10-17, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:28:08,489  INFO: Processed S3B_OLCI_EFRNT.20251018T014203.L2.OC.NRT.nc -> 2025-10-18, chl=nan
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:353: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:325: RuntimeWarning: Mean of empty slice
  chl_mean = np.nanmean(region_3x3)
2025-10-21 14:28:10,209  INFO: Processed S3B_OLCI_EFRNT.20251019T011852.L2.OC.NRT.nc -> 2025-10-19, chl=nan
2025-10-21 14:28:10,259  INFO: Timeseries updated: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (20 rows)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-21 14:28:10,340  INFO: 
============================================================
2025-10-21 14:28:10,341  INFO: STARTING GAP DETECTION
2025-10-21 14:28:10,341  INFO: ============================================================
2025-10-21 14:28:10,341  INFO: === Starting gap detection and filling ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  end_date = pd.to_datetime(end_date_str) if end_date_str else datetime.utcnow()
2025-10-21 14:28:10,355  INFO: Found 1 missing days in timeseries
2025-10-21 14:28:10,375  INFO: 
--- Checking gap for 2025-10-21 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-21 14:28:10,378  INFO:   Skipping 2025-10-21 - checked recently, no data
2025-10-21 14:28:10,378  INFO: 
=== Gap filling complete: 0 filled, 0 checked ===
2025-10-21 14:28:10,378  INFO: Gap detection complete: 0 gaps filled
2025-10-21 14:28:10,382  INFO: 
============================================================
2025-10-21 14:28:10,382  INFO: GAP SUMMARY REPORT
2025-10-21 14:28:10,382  INFO: ============================================================
2025-10-21 14:28:10,385  INFO: 
Gap Status Distribution:
2025-10-21 14:28:10,385  INFO:   filled: 4
2025-10-21 14:28:10,385  INFO:   unavailable: 1
2025-10-21 14:28:10,387  INFO: 
Unfilled gaps: 1
2025-10-21 14:28:10,387  INFO:   Date range: 2025-10-21 to 2025-10-21
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:811: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  recent = gap_df[gap_df['last_checked'] > datetime.utcnow() - timedelta(hours=24)]
2025-10-21 14:28:10,388  INFO: 
Gaps checked in last 24 hours: 5
2025-10-21 14:28:10,388  INFO: ============================================================

2025-10-21 14:28:12,445  INFO: Chromium init'ed with kwargs {}
2025-10-21 14:28:12,445  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-21 14:28:12,448  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpt3yid0jf.
2025-10-21 14:28:12,450  INFO: Opening browser.
2025-10-21 14:28:12,452  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpeg8agkrj.
2025-10-21 14:28:12,452  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpeg8agkrj
2025-10-21 14:28:13,430  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpt3yid0jf/index.html
2025-10-21 14:28:13,430  INFO: Waiting on all navigates
2025-10-21 14:28:17,802  INFO: All navigates done, putting them all in queue.
2025-10-21 14:28:17,805  INFO: Getting tab from queue (has 1)
2025-10-21 14:28:17,805  INFO: Got 4E3B
2025-10-21 14:28:17,805  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-21 14:28:17,806  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-21 14:28:18,065  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-21 14:28:18,066  INFO: Reloading tab 4E3B before return.
2025-10-21 14:28:18,545  INFO: Putting tab 4E3B back (queue size: 0).
2025-10-21 14:28:18,545  INFO: Waiting for all cleanups to finish.
2025-10-21 14:28:18,545  INFO: Exiting Kaleido
2025-10-21 14:28:18,547  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:18,547  INFO: shutil.rmtree worked.
2025-10-21 14:28:18,547  INFO: Cancelling tasks.
2025-10-21 14:28:18,548  INFO: Exiting Kaleido/Choreo
2025-10-21 14:28:18,548  INFO: Closing browser.
2025-10-21 14:28:18,559  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:18,559  INFO: shutil.rmtree worked.
2025-10-21 14:28:18,560  INFO: Cancelling tasks.
2025-10-21 14:28:18,560  INFO: Exiting Kaleido/Choreo
2025-10-21 14:28:18,560  INFO: Closing browser.
2025-10-21 14:28:19,026  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:19,026  INFO: shutil.rmtree worked.
2025-10-21 14:28:19,031  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-21 14:28:19,052  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:19,052  INFO: shutil.rmtree worked.
2025-10-21 14:28:19,148  INFO: Chromium init'ed with kwargs {}
2025-10-21 14:28:19,149  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-21 14:28:19,151  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp10bqef9a.
2025-10-21 14:28:19,152  INFO: Opening browser.
2025-10-21 14:28:19,154  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpb99l8z9z.
2025-10-21 14:28:19,154  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpb99l8z9z
2025-10-21 14:28:20,079  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp10bqef9a/index.html
2025-10-21 14:28:20,079  INFO: Waiting on all navigates
2025-10-21 14:28:22,102  INFO: All navigates done, putting them all in queue.
2025-10-21 14:28:22,103  INFO: Getting tab from queue (has 1)
2025-10-21 14:28:22,103  INFO: Got A932
2025-10-21 14:28:22,103  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-21 14:28:22,103  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-21 14:28:22,228  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-21 14:28:22,229  INFO: Reloading tab A932 before return.
2025-10-21 14:28:22,473  INFO: Putting tab A932 back (queue size: 0).
2025-10-21 14:28:22,473  INFO: Waiting for all cleanups to finish.
2025-10-21 14:28:22,474  INFO: Exiting Kaleido
2025-10-21 14:28:22,475  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:22,476  INFO: shutil.rmtree worked.
2025-10-21 14:28:22,476  INFO: Cancelling tasks.
2025-10-21 14:28:22,476  INFO: Exiting Kaleido/Choreo
2025-10-21 14:28:22,476  INFO: Closing browser.
2025-10-21 14:28:22,479  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:22,480  INFO: shutil.rmtree worked.
2025-10-21 14:28:22,480  INFO: Cancelling tasks.
2025-10-21 14:28:22,480  INFO: Exiting Kaleido/Choreo
2025-10-21 14:28:22,480  INFO: Closing browser.
2025-10-21 14:28:22,735  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:22,735  INFO: shutil.rmtree worked.
2025-10-21 14:28:22,756  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:599: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-21 14:28:22,771  INFO: TemporaryDirectory.cleanup() worked.
2025-10-21 14:28:22,771  INFO: shutil.rmtree worked.
2025-10-21 14:28:22,896  INFO: Full plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-21 14:28:22,896  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-21 14:28:24,315  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-20
2025-10-21 14:28:24,413  INFO: Current branch: main
2025-10-21 14:28:26,683  INFO: Git push successful to main
2025-10-21 14:28:26,683  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:655: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:662: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-21 14:28:26,685  INFO: Cleanup done. Removed 0 files (excluding .nc)
2025-10-21 14:28:26,685  INFO: === Pipeline finished ===
2025-10-22 08:50:39,306  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-22 08:50:39,325  INFO: Daily mode: Searching for data for 2025-10-21
2025-10-22 08:50:39,326  INFO: Logging in to Earthdata via earthaccess...
2025-10-22 08:50:40,716  INFO: You're now authenticated with NASA Earthdata Login
2025-10-22 08:50:45,638  INFO: Earthdata login OK.
2025-10-22 08:50:45,638  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-21...
2025-10-22 08:50:46,898  INFO: Granules found: 0
2025-10-22 08:50:47,694  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-22 08:50:47,694  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-21...
2025-10-22 08:50:48,491  INFO: Granules found: 0
2025-10-22 08:50:49,269  INFO: No results for OLCIS3B_L2_EFR_OC_NRT
2025-10-22 08:50:49,269  INFO: No files downloaded for yesterday. Checking availability...
2025-10-22 08:50:49,269  INFO: Logging in to Earthdata via earthaccess...
2025-10-22 08:50:53,899  INFO: Earthdata login OK.
2025-10-22 08:50:54,801  INFO: Granules found: 0
2025-10-22 08:50:55,568  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-22 08:50:56,330  INFO: Granules found: 0
2025-10-22 08:50:57,058  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-22 08:50:57,058  INFO: No satellite data available for 2025-10-21
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-22 08:50:57,084  INFO: 
============================================================
2025-10-22 08:50:57,085  INFO: STARTING GAP DETECTION
2025-10-22 08:50:57,085  INFO: ============================================================
2025-10-22 08:50:57,085  INFO: === Starting gap detection and filling ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  end_date = pd.to_datetime(end_date_str) if end_date_str else datetime.utcnow()
2025-10-22 08:50:57,091  INFO: Found 2 missing days in timeseries
2025-10-22 08:50:57,106  INFO: 
--- Checking gap for 2025-10-21 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-22 08:50:57,108  INFO:   Skipping 2025-10-21 - checked recently, no data
2025-10-22 08:50:57,108  INFO: 
--- Checking gap for 2025-10-22 ---
2025-10-22 08:50:57,109  INFO: Logging in to Earthdata via earthaccess...
2025-10-22 08:50:59,636  INFO: Earthdata login OK.
2025-10-22 08:51:00,394  INFO: Granules found: 0
2025-10-22 08:51:01,147  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-22
2025-10-22 08:51:01,918  INFO: Granules found: 0
2025-10-22 08:51:02,693  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-22
2025-10-22 08:51:02,693  INFO:   No data available for 2025-10-22
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-22 08:51:04,702  INFO: 
=== Gap filling complete: 0 filled, 1 checked ===
2025-10-22 08:51:04,702  INFO: Gap detection complete: 0 gaps filled
2025-10-22 08:51:04,717  INFO: 
============================================================
2025-10-22 08:51:04,717  INFO: GAP SUMMARY REPORT
2025-10-22 08:51:04,717  INFO: ============================================================
2025-10-22 08:51:04,717  INFO: 
Gap Status Distribution:
2025-10-22 08:51:04,718  INFO:   filled: 4
2025-10-22 08:51:04,718  INFO:   unavailable: 2
2025-10-22 08:51:04,718  INFO: 
Unfilled gaps: 2
2025-10-22 08:51:04,718  INFO:   Date range: 2025-10-21 to 2025-10-22
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:811: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  recent = gap_df[gap_df['last_checked'] > datetime.utcnow() - timedelta(hours=24)]
2025-10-22 08:51:04,719  INFO: 
Gaps checked in last 24 hours: 2
2025-10-22 08:51:04,719  INFO: ============================================================

2025-10-22 08:51:06,490  INFO: Chromium init'ed with kwargs {}
2025-10-22 08:51:06,491  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-22 08:51:06,493  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp0ie2pz16.
2025-10-22 08:51:06,494  INFO: Opening browser.
2025-10-22 08:51:06,496  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp7nckz8at.
2025-10-22 08:51:06,496  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp7nckz8at
2025-10-22 08:51:08,201  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp0ie2pz16/index.html
2025-10-22 08:51:08,201  INFO: Waiting on all navigates
2025-10-22 08:51:09,884  INFO: All navigates done, putting them all in queue.
2025-10-22 08:51:09,886  INFO: Getting tab from queue (has 1)
2025-10-22 08:51:09,886  INFO: Got 81E5
2025-10-22 08:51:09,886  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-22 08:51:09,886  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-22 08:51:09,984  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-22 08:51:09,984  INFO: Reloading tab 81E5 before return.
2025-10-22 08:51:10,082  INFO: Putting tab 81E5 back (queue size: 0).
2025-10-22 08:51:10,082  INFO: Waiting for all cleanups to finish.
2025-10-22 08:51:10,083  INFO: Exiting Kaleido
2025-10-22 08:51:10,083  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:10,084  INFO: shutil.rmtree worked.
2025-10-22 08:51:10,084  INFO: Cancelling tasks.
2025-10-22 08:51:10,084  INFO: Exiting Kaleido/Choreo
2025-10-22 08:51:10,084  INFO: Closing browser.
2025-10-22 08:51:10,085  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:10,086  INFO: shutil.rmtree worked.
2025-10-22 08:51:10,086  INFO: Cancelling tasks.
2025-10-22 08:51:10,086  INFO: Exiting Kaleido/Choreo
2025-10-22 08:51:10,086  INFO: Closing browser.
2025-10-22 08:51:10,227  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:10,227  INFO: shutil.rmtree worked.
2025-10-22 08:51:10,242  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-22 08:51:10,254  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:10,255  INFO: shutil.rmtree worked.
2025-10-22 08:51:10,349  INFO: Chromium init'ed with kwargs {}
2025-10-22 08:51:10,350  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-22 08:51:10,351  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp60pbq1p9.
2025-10-22 08:51:10,353  INFO: Opening browser.
2025-10-22 08:51:10,355  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpmc9pvrai.
2025-10-22 08:51:10,355  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpmc9pvrai
2025-10-22 08:51:10,932  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmp60pbq1p9/index.html
2025-10-22 08:51:10,933  INFO: Waiting on all navigates
2025-10-22 08:51:12,153  INFO: All navigates done, putting them all in queue.
2025-10-22 08:51:12,154  INFO: Getting tab from queue (has 1)
2025-10-22 08:51:12,154  INFO: Got 4C6C
2025-10-22 08:51:12,154  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-22 08:51:12,154  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-22 08:51:12,254  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-22 08:51:12,254  INFO: Reloading tab 4C6C before return.
2025-10-22 08:51:12,382  INFO: Putting tab 4C6C back (queue size: 0).
2025-10-22 08:51:12,382  INFO: Waiting for all cleanups to finish.
2025-10-22 08:51:12,383  INFO: Exiting Kaleido
2025-10-22 08:51:12,383  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:12,384  INFO: shutil.rmtree worked.
2025-10-22 08:51:12,384  INFO: Cancelling tasks.
2025-10-22 08:51:12,384  INFO: Exiting Kaleido/Choreo
2025-10-22 08:51:12,384  INFO: Closing browser.
2025-10-22 08:51:12,389  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:12,389  INFO: shutil.rmtree worked.
2025-10-22 08:51:12,389  INFO: Cancelling tasks.
2025-10-22 08:51:12,389  INFO: Exiting Kaleido/Choreo
2025-10-22 08:51:12,389  INFO: Closing browser.
2025-10-22 08:51:12,745  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:12,746  INFO: shutil.rmtree worked.
2025-10-22 08:51:12,763  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-22 08:51:12,768  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 08:51:12,768  INFO: shutil.rmtree worked.
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:599: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-22 08:51:12,871  INFO: Full plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-22 08:51:12,871  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-22 08:51:14,169  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-21
2025-10-22 08:51:14,233  INFO: Current branch: main
2025-10-22 08:51:16,328  INFO: Git push successful to main
2025-10-22 08:51:16,328  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:655: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:662: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-22 08:51:16,330  INFO: Cleanup done. Removed 0 files (excluding .nc)
2025-10-22 08:51:16,331  INFO: === Pipeline finished ===
2025-10-22 10:21:59,134  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-22 10:21:59,154  INFO: Daily mode: Searching for data for 2025-10-21
2025-10-22 10:21:59,155  INFO: Logging in to Earthdata via earthaccess...
2025-10-22 10:22:00,561  INFO: You're now authenticated with NASA Earthdata Login
2025-10-22 10:22:05,598  INFO: Earthdata login OK.
2025-10-22 10:22:05,598  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-21...
2025-10-22 10:22:06,464  INFO: Granules found: 0
2025-10-22 10:22:07,344  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-22 10:22:07,344  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-21...
2025-10-22 10:22:08,181  INFO: Granules found: 0
2025-10-22 10:22:08,928  INFO: No results for OLCIS3B_L2_EFR_OC_NRT
2025-10-22 10:22:08,928  INFO: No files downloaded for yesterday. Checking availability...
2025-10-22 10:22:08,928  INFO: Logging in to Earthdata via earthaccess...
2025-10-22 10:22:11,455  INFO: Earthdata login OK.
2025-10-22 10:22:12,223  INFO: Granules found: 0
2025-10-22 10:22:13,101  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-22 10:22:13,835  INFO: Granules found: 0
2025-10-22 10:22:14,570  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-22 10:22:14,570  INFO: No satellite data available for 2025-10-21
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-22 10:22:14,596  INFO: 
============================================================
2025-10-22 10:22:14,596  INFO: STARTING GAP DETECTION
2025-10-22 10:22:14,596  INFO: ============================================================
2025-10-22 10:22:14,596  INFO: === Starting gap detection and filling ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  end_date = pd.to_datetime(end_date_str) if end_date_str else datetime.utcnow()
2025-10-22 10:22:14,602  INFO: Found 2 missing days in timeseries
2025-10-22 10:22:14,608  INFO: 
--- Checking gap for 2025-10-21 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-22 10:22:14,609  INFO:   Skipping 2025-10-21 - checked recently, no data
2025-10-22 10:22:14,609  INFO: 
--- Checking gap for 2025-10-22 ---
2025-10-22 10:22:14,611  INFO:   Skipping 2025-10-22 - checked recently, no data
2025-10-22 10:22:14,611  INFO: 
=== Gap filling complete: 0 filled, 0 checked ===
2025-10-22 10:22:14,611  INFO: Gap detection complete: 0 gaps filled
2025-10-22 10:22:14,614  INFO: 
============================================================
2025-10-22 10:22:14,614  INFO: GAP SUMMARY REPORT
2025-10-22 10:22:14,615  INFO: ============================================================
2025-10-22 10:22:14,615  INFO: 
Gap Status Distribution:
2025-10-22 10:22:14,615  INFO:   filled: 4
2025-10-22 10:22:14,615  INFO:   unavailable: 2
2025-10-22 10:22:14,616  INFO: 
Unfilled gaps: 2
2025-10-22 10:22:14,616  INFO:   Date range: 2025-10-21 to 2025-10-22
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:901: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  recent = gap_df[gap_df['last_checked'] > datetime.utcnow() - timedelta(hours=24)]
2025-10-22 10:22:14,617  INFO: 
Gaps checked in last 24 hours: 2
2025-10-22 10:22:14,617  INFO: ============================================================

2025-10-22 10:22:16,468  INFO: Chromium init'ed with kwargs {}
2025-10-22 10:22:16,469  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-22 10:22:16,471  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpu3vz5yau.
2025-10-22 10:22:16,472  INFO: Opening browser.
2025-10-22 10:22:16,474  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpu3w7z2sp.
2025-10-22 10:22:16,474  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpu3w7z2sp
2025-10-22 10:22:18,471  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpu3vz5yau/index.html
2025-10-22 10:22:18,471  INFO: Waiting on all navigates
2025-10-22 10:22:20,703  INFO: All navigates done, putting them all in queue.
2025-10-22 10:22:20,705  INFO: Getting tab from queue (has 1)
2025-10-22 10:22:20,706  INFO: Got 8CAF
2025-10-22 10:22:20,706  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png
2025-10-22 10:22:20,706  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-22 10:22:20,882  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_14.png.
2025-10-22 10:22:20,883  INFO: Reloading tab 8CAF before return.
2025-10-22 10:22:21,017  INFO: Putting tab 8CAF back (queue size: 0).
2025-10-22 10:22:21,018  INFO: Waiting for all cleanups to finish.
2025-10-22 10:22:21,018  INFO: Exiting Kaleido
2025-10-22 10:22:21,019  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:21,019  INFO: shutil.rmtree worked.
2025-10-22 10:22:21,019  INFO: Cancelling tasks.
2025-10-22 10:22:21,019  INFO: Exiting Kaleido/Choreo
2025-10-22 10:22:21,019  INFO: Closing browser.
2025-10-22 10:22:21,022  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:21,022  INFO: shutil.rmtree worked.
2025-10-22 10:22:21,022  INFO: Cancelling tasks.
2025-10-22 10:22:21,023  INFO: Exiting Kaleido/Choreo
2025-10-22 10:22:21,023  INFO: Closing browser.
2025-10-22 10:22:21,206  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:21,206  INFO: shutil.rmtree worked.
2025-10-22 10:22:21,210  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-14.html
2025-10-22 10:22:21,222  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:21,222  INFO: shutil.rmtree worked.
2025-10-22 10:22:21,321  INFO: Chromium init'ed with kwargs {}
2025-10-22 10:22:21,322  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-22 10:22:21,322  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpis2z_8xb.
2025-10-22 10:22:21,323  INFO: Opening browser.
2025-10-22 10:22:21,325  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpri1_yfpi.
2025-10-22 10:22:21,325  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpri1_yfpi
2025-10-22 10:22:22,136  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpis2z_8xb/index.html
2025-10-22 10:22:22,136  INFO: Waiting on all navigates
2025-10-22 10:22:23,991  INFO: All navigates done, putting them all in queue.
2025-10-22 10:22:23,994  INFO: Getting tab from queue (has 1)
2025-10-22 10:22:23,995  INFO: Got 0162
2025-10-22 10:22:23,995  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-22 10:22:23,995  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-22 10:22:24,184  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-22 10:22:24,185  INFO: Reloading tab 0162 before return.
2025-10-22 10:22:24,356  INFO: Putting tab 0162 back (queue size: 0).
2025-10-22 10:22:24,356  INFO: Waiting for all cleanups to finish.
2025-10-22 10:22:24,356  INFO: Exiting Kaleido
2025-10-22 10:22:24,357  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:24,358  INFO: shutil.rmtree worked.
2025-10-22 10:22:24,358  INFO: Cancelling tasks.
2025-10-22 10:22:24,358  INFO: Exiting Kaleido/Choreo
2025-10-22 10:22:24,358  INFO: Closing browser.
2025-10-22 10:22:24,361  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:24,362  INFO: shutil.rmtree worked.
2025-10-22 10:22:24,362  INFO: Cancelling tasks.
2025-10-22 10:22:24,362  INFO: Exiting Kaleido/Choreo
2025-10-22 10:22:24,362  INFO: Closing browser.
2025-10-22 10:22:24,601  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:24,601  INFO: shutil.rmtree worked.
2025-10-22 10:22:24,634  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-22 10:22:24,644  INFO: TemporaryDirectory.cleanup() worked.
2025-10-22 10:22:24,645  INFO: shutil.rmtree worked.
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:689: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-22 10:22:24,858  INFO: Full plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-22 10:22:24,858  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-22 10:22:26,272  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-21
2025-10-22 10:22:26,351  INFO: Current branch: main
2025-10-22 10:22:28,225  INFO: Git push successful to main
2025-10-22 10:22:28,225  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:745: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:752: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-22 10:22:28,227  INFO: Cleanup done. Removed 0 files (excluding .nc)
2025-10-22 10:22:28,227  INFO: === Pipeline finished ===
2025-10-23 08:43:17,406  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-23 08:43:17,433  INFO: Daily mode: Searching for data for 2025-10-22
2025-10-23 08:43:17,433  INFO: Logging in to Earthdata via earthaccess...
2025-10-23 08:43:18,865  INFO: You're now authenticated with NASA Earthdata Login
2025-10-23 08:43:23,836  INFO: Earthdata login OK.
2025-10-23 08:43:23,837  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-22...
2025-10-23 08:43:25,041  INFO: Granules found: 0
2025-10-23 08:43:25,882  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-23 08:43:25,883  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-22...
2025-10-23 08:43:26,640  INFO: Granules found: 0
2025-10-23 08:43:27,420  INFO: No results for OLCIS3B_L2_EFR_OC_NRT
2025-10-23 08:43:27,421  INFO: No files downloaded for yesterday. Checking availability...
2025-10-23 08:43:27,421  INFO: Logging in to Earthdata via earthaccess...
2025-10-23 08:43:29,879  INFO: Earthdata login OK.
2025-10-23 08:43:30,758  INFO: Granules found: 0
2025-10-23 08:43:31,520  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-22
2025-10-23 08:43:32,257  INFO: Granules found: 0
2025-10-23 08:43:32,965  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-22
2025-10-23 08:43:32,965  INFO: No satellite data available for 2025-10-22
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-23 08:43:33,011  INFO: 
============================================================
2025-10-23 08:43:33,011  INFO: STARTING GAP DETECTION
2025-10-23 08:43:33,011  INFO: ============================================================
2025-10-23 08:43:33,011  INFO: === Starting gap detection and filling ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  end_date = pd.to_datetime(end_date_str) if end_date_str else datetime.utcnow()
2025-10-23 08:43:33,019  INFO: Found 3 missing days in timeseries
2025-10-23 08:43:33,042  INFO: 
--- Checking gap for 2025-10-21 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-23 08:43:33,044  INFO: Logging in to Earthdata via earthaccess...
2025-10-23 08:43:35,653  INFO: Earthdata login OK.
2025-10-23 08:43:36,391  INFO: Granules found: 0
2025-10-23 08:43:37,182  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-21
2025-10-23 08:43:37,924  INFO: Granules found: 1
2025-10-23 08:43:38,692  INFO:   OLCIS3B_L2_EFR_OC_NRT: 1 granules found for 2025-10-21
2025-10-23 08:43:38,692  INFO:   Data available for 2025-10-21! Downloading...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-23 08:43:38,704  INFO: Logging in to Earthdata via earthaccess...
2025-10-23 08:43:41,221  INFO: Earthdata login OK.
2025-10-23 08:43:41,221  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-21...
2025-10-23 08:43:41,966  INFO: Granules found: 0
2025-10-23 08:43:42,861  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-23 08:43:42,861  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-21...
2025-10-23 08:43:43,617  INFO: Granules found: 1
2025-10-23 08:43:44,505  INFO: Found 1 items. Downloading...
2025-10-23 08:43:44,510  INFO:  Getting 1 granules, approx download size: 0.14 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 381.68it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:15<00:00, 15.14s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:15<00:00, 15.14s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 9404.27it/s]
2025-10-23 08:44:00,691  INFO:   Downloaded 33 files
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:11,249  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:11,264  WARNING: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:13,776  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:13,808  WARNING: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:16,398  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:16,425  WARNING: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:19,019  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:19,035  WARNING: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:21,556  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:21,584  WARNING: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:24,887  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:24,944  WARNING: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:28,157  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:28,179  WARNING: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:44:30,934  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.8696
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:33,263  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:33,278  WARNING: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:44:35,629  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.5012
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:44:38,016  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.9988
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:40,490  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:40,516  WARNING: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:44:43,138  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.4136
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:44,982  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:44,997  WARNING: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:46,893  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:46,906  WARNING: Processed S3A_OLCI_EFRNT.20251019T015436.L2.OC.NRT.nc -> 2025-10-19, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:48,799  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:48,813  WARNING: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:50,688  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:50,700  WARNING: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:44:52,629  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.7205
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:54,429  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:54,443  WARNING: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:56,175  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:56,190  WARNING: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:44:57,766  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.0715
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:44:59,382  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:44:59,392  WARNING: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:01,076  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:01,088  WARNING: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:02,788  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:02,800  WARNING: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:04,567  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:04,577  WARNING: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:06,249  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:06,260  WARNING: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:45:07,945  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:09,626  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:09,639  WARNING: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:11,359  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:11,371  WARNING: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:13,152  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:13,163  WARNING: Processed S3B_OLCI_EFRNT.20251017T020814.L2.OC.NRT.nc -> 2025-10-17, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:14,965  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:14,978  WARNING: Processed S3B_OLCI_EFRNT.20251018T014203.L2.OC.NRT.nc -> 2025-10-18, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-23 08:45:16,621  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-23 08:45:16,632  WARNING: Processed S3B_OLCI_EFRNT.20251019T011852.L2.OC.NRT.nc -> 2025-10-19, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-23 08:45:18,174  INFO: Processed S3B_OLCI_EFRNT.20251021T020430.L2.OC.NRT.nc -> 2025-10-21, chl=4.0366
2025-10-23 08:45:18,182  INFO: Extracted 8 valid records from 33 files
2025-10-23 08:45:18,186  INFO: Existing CSV has 20 records
2025-10-23 08:45:18,188  INFO: After merge: 21 total records
2025-10-23 08:45:18,192  INFO: \u2713 CSV saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (21 rows)
2025-10-23 08:45:18,205  INFO: \u2713 CSV verified: 21 rows on disk
2025-10-23 08:45:18,224  INFO:   \u2713 Successfully filled gap for 2025-10-21
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-23 08:45:20,245  INFO: 
--- Checking gap for 2025-10-22 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-23 08:45:20,247  INFO:   Skipping 2025-10-22 - checked recently, no data
2025-10-23 08:45:20,248  INFO: 
--- Checking gap for 2025-10-23 ---
2025-10-23 08:45:20,249  INFO: Logging in to Earthdata via earthaccess...
2025-10-23 08:45:22,817  INFO: Earthdata login OK.
2025-10-23 08:45:23,646  INFO: Granules found: 0
2025-10-23 08:45:24,358  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-23
2025-10-23 08:45:25,093  INFO: Granules found: 0
2025-10-23 08:45:25,797  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-23
2025-10-23 08:45:25,797  INFO:   No data available for 2025-10-23
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-23 08:45:27,822  INFO: 
=== Gap filling complete: 1 filled, 2 checked ===
2025-10-23 08:45:27,822  INFO: Gap detection complete: 1 gaps filled
2025-10-23 08:45:27,840  INFO: 
============================================================
2025-10-23 08:45:27,840  INFO: GAP SUMMARY REPORT
2025-10-23 08:45:27,841  INFO: ============================================================
2025-10-23 08:45:27,846  INFO: 
Gap Status Distribution:
2025-10-23 08:45:27,847  INFO:   filled: 5
2025-10-23 08:45:27,847  INFO:   unavailable: 2
2025-10-23 08:45:27,848  INFO: 
Unfilled gaps: 2
2025-10-23 08:45:27,849  INFO:   Date range: 2025-10-22 to 2025-10-23
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:901: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  recent = gap_df[gap_df['last_checked'] > datetime.utcnow() - timedelta(hours=24)]
2025-10-23 08:45:27,850  INFO: 
Gaps checked in last 24 hours: 3
2025-10-23 08:45:27,850  INFO: ============================================================

2025-10-23 08:45:29,493  INFO: Chromium init'ed with kwargs {}
2025-10-23 08:45:29,494  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-23 08:45:29,496  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpscn0excz.
2025-10-23 08:45:29,497  INFO: Opening browser.
2025-10-23 08:45:29,499  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp3gpsuf0q.
2025-10-23 08:45:29,500  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp3gpsuf0q
2025-10-23 08:45:31,146  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpscn0excz/index.html
2025-10-23 08:45:31,147  INFO: Waiting on all navigates
2025-10-23 08:45:32,851  INFO: All navigates done, putting them all in queue.
2025-10-23 08:45:32,853  INFO: Getting tab from queue (has 1)
2025-10-23 08:45:32,853  INFO: Got 25FE
2025-10-23 08:45:32,853  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_21.png
2025-10-23 08:45:32,853  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_21.png.
2025-10-23 08:45:32,951  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_21.png.
2025-10-23 08:45:32,952  INFO: Reloading tab 25FE before return.
2025-10-23 08:45:33,139  INFO: Putting tab 25FE back (queue size: 0).
2025-10-23 08:45:33,139  INFO: Waiting for all cleanups to finish.
2025-10-23 08:45:33,139  INFO: Exiting Kaleido
2025-10-23 08:45:33,141  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:33,141  INFO: shutil.rmtree worked.
2025-10-23 08:45:33,141  INFO: Cancelling tasks.
2025-10-23 08:45:33,141  INFO: Exiting Kaleido/Choreo
2025-10-23 08:45:33,141  INFO: Closing browser.
2025-10-23 08:45:33,144  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:33,145  INFO: shutil.rmtree worked.
2025-10-23 08:45:33,145  INFO: Cancelling tasks.
2025-10-23 08:45:33,145  INFO: Exiting Kaleido/Choreo
2025-10-23 08:45:33,145  INFO: Closing browser.
2025-10-23 08:45:33,341  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:33,341  INFO: shutil.rmtree worked.
2025-10-23 08:45:33,344  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-21.html
2025-10-23 08:45:33,356  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:33,357  INFO: shutil.rmtree worked.
2025-10-23 08:45:33,449  INFO: Chromium init'ed with kwargs {}
2025-10-23 08:45:33,449  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-23 08:45:33,450  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpb85a2vd3.
2025-10-23 08:45:33,451  INFO: Opening browser.
2025-10-23 08:45:33,452  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp_7d66lht.
2025-10-23 08:45:33,452  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp_7d66lht
2025-10-23 08:45:34,062  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmpb85a2vd3/index.html
2025-10-23 08:45:34,063  INFO: Waiting on all navigates
2025-10-23 08:45:35,609  INFO: All navigates done, putting them all in queue.
2025-10-23 08:45:35,610  INFO: Getting tab from queue (has 1)
2025-10-23 08:45:35,610  INFO: Got C5C0
2025-10-23 08:45:35,610  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-23 08:45:35,610  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-23 08:45:35,713  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-23 08:45:35,713  INFO: Reloading tab C5C0 before return.
2025-10-23 08:45:35,810  INFO: Putting tab C5C0 back (queue size: 0).
2025-10-23 08:45:35,810  INFO: Waiting for all cleanups to finish.
2025-10-23 08:45:35,810  INFO: Exiting Kaleido
2025-10-23 08:45:35,810  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:35,811  INFO: shutil.rmtree worked.
2025-10-23 08:45:35,811  INFO: Cancelling tasks.
2025-10-23 08:45:35,811  INFO: Exiting Kaleido/Choreo
2025-10-23 08:45:35,811  INFO: Closing browser.
2025-10-23 08:45:35,812  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:35,813  INFO: shutil.rmtree worked.
2025-10-23 08:45:35,813  INFO: Cancelling tasks.
2025-10-23 08:45:35,813  INFO: Exiting Kaleido/Choreo
2025-10-23 08:45:35,813  INFO: Closing browser.
2025-10-23 08:45:35,945  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:35,945  INFO: shutil.rmtree worked.
2025-10-23 08:45:35,949  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:689: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-23 08:45:35,957  INFO: TemporaryDirectory.cleanup() worked.
2025-10-23 08:45:35,958  INFO: shutil.rmtree worked.
2025-10-23 08:45:36,073  INFO: Full plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-23 08:45:36,073  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-23 08:45:37,385  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-22
2025-10-23 08:45:37,460  INFO: Current branch: main
2025-10-23 08:45:39,482  INFO: Git push successful to main
2025-10-23 08:45:39,482  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:745: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:752: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-23 08:45:39,485  INFO: Cleanup done. Removed 0 files (excluding .nc)
2025-10-23 08:45:39,485  INFO: === Pipeline finished ===
2025-10-24 08:59:09,503  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-24 08:59:09,540  INFO: Daily mode: Searching for data for 2025-10-23
2025-10-24 08:59:09,541  INFO: Logging in to Earthdata via earthaccess...
2025-10-24 08:59:11,515  INFO: You're now authenticated with NASA Earthdata Login
2025-10-24 08:59:16,457  INFO: Earthdata login OK.
2025-10-24 08:59:16,458  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-23...
2025-10-24 08:59:17,773  INFO: Granules found: 0
2025-10-24 08:59:18,566  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-24 08:59:18,566  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-23...
2025-10-24 08:59:19,345  INFO: Granules found: 0
2025-10-24 08:59:20,106  INFO: No results for OLCIS3B_L2_EFR_OC_NRT
2025-10-24 08:59:20,107  INFO: No files downloaded for yesterday. Checking availability...
2025-10-24 08:59:20,107  INFO: Logging in to Earthdata via earthaccess...
2025-10-24 08:59:22,602  INFO: Earthdata login OK.
2025-10-24 08:59:23,351  INFO: Granules found: 0
2025-10-24 08:59:24,111  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-23
2025-10-24 08:59:24,866  INFO: Granules found: 0
2025-10-24 08:59:25,604  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-23
2025-10-24 08:59:25,604  INFO: No satellite data available for 2025-10-23
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-24 08:59:25,637  INFO: 
============================================================
2025-10-24 08:59:25,637  INFO: STARTING GAP DETECTION
2025-10-24 08:59:25,637  INFO: ============================================================
2025-10-24 08:59:25,638  INFO: === Starting gap detection and filling ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  end_date = pd.to_datetime(end_date_str) if end_date_str else datetime.utcnow()
2025-10-24 08:59:25,645  INFO: Found 3 missing days in timeseries
2025-10-24 08:59:25,666  INFO: 
--- Checking gap for 2025-10-22 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-24 08:59:25,669  INFO: Logging in to Earthdata via earthaccess...
2025-10-24 08:59:28,214  INFO: Earthdata login OK.
2025-10-24 08:59:29,036  INFO: Granules found: 0
2025-10-24 08:59:29,772  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-22
2025-10-24 08:59:30,529  INFO: Granules found: 1
2025-10-24 08:59:31,262  INFO:   OLCIS3B_L2_EFR_OC_NRT: 1 granules found for 2025-10-22
2025-10-24 08:59:31,262  INFO:   Data available for 2025-10-22! Downloading...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-24 08:59:31,271  INFO: Logging in to Earthdata via earthaccess...
2025-10-24 08:59:33,761  INFO: Earthdata login OK.
2025-10-24 08:59:33,761  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-22...
2025-10-24 08:59:34,640  INFO: Granules found: 0
2025-10-24 08:59:35,459  INFO: No results for OLCIS3A_L2_EFR_OC_NRT
2025-10-24 08:59:35,459  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-22...
2025-10-24 08:59:36,213  INFO: Granules found: 1
2025-10-24 08:59:37,175  INFO: Found 1 items. Downloading...
2025-10-24 08:59:37,177  INFO:  Getting 1 granules, approx download size: 0.11 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 1436.90it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:14<00:00, 14.98s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:14<00:00, 14.98s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 26546.23it/s]
2025-10-24 08:59:53,166  INFO:   Downloaded 34 files
Warning 3: Cannot find gdalvrt.xsd (GDAL_DATA is not defined)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 08:59:57,325  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 08:59:57,338  WARNING: Processed S3A_OLCI_EFRNT.20251001T012055.L2.OC.NRT.nc -> 2025-10-01, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 08:59:59,026  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 08:59:59,040  WARNING: Processed S3A_OLCI_EFRNT.20251001T012355.L2.OC.NRT.nc -> 2025-10-01, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:01,029  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:01,048  WARNING: Processed S3A_OLCI_EFRNT.20251003T020933.L2.OC.NRT.nc -> 2025-10-03, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:03,028  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:03,040  WARNING: Processed S3A_OLCI_EFRNT.20251004T014322.L2.OC.NRT.nc -> 2025-10-04, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:04,653  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:04,666  WARNING: Processed S3A_OLCI_EFRNT.20251005T011711.L2.OC.NRT.nc -> 2025-10-05, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:06,471  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:06,483  WARNING: Processed S3A_OLCI_EFRNT.20251005T012011.L2.OC.NRT.nc -> 2025-10-05, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:08,454  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:08,471  WARNING: Processed S3A_OLCI_EFRNT.20251007T020548.L2.OC.NRT.nc -> 2025-10-07, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:10,600  INFO: Processed S3A_OLCI_EFRNT.20251008T013937.L2.OC.NRT.nc -> 2025-10-08, chl=6.8696
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:12,461  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:12,471  WARNING: Processed S3A_OLCI_EFRNT.20251009T011626.L2.OC.NRT.nc -> 2025-10-09, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:14,171  INFO: Processed S3A_OLCI_EFRNT.20251011T020203.L2.OC.NRT.nc -> 2025-10-11, chl=4.5012
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:15,743  INFO: Processed S3A_OLCI_EFRNT.20251012T013553.L2.OC.NRT.nc -> 2025-10-12, chl=2.9988
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:17,358  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:17,369  WARNING: Processed S3A_OLCI_EFRNT.20251013T011242.L2.OC.NRT.nc -> 2025-10-13, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:18,958  INFO: Processed S3A_OLCI_EFRNT.20251015T015820.L2.OC.NRT.nc -> 2025-10-15, chl=4.4136
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:20,371  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:20,380  WARNING: Processed S3A_OLCI_EFRNT.20251016T013209.L2.OC.NRT.nc -> 2025-10-16, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:21,800  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:21,807  WARNING: Processed S3A_OLCI_EFRNT.20251019T015436.L2.OC.NRT.nc -> 2025-10-19, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:23,299  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:23,306  WARNING: Processed S3A_OLCI_EFRNT.20251020T012825.L2.OC.NRT.nc -> 2025-10-20, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:24,761  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:24,769  WARNING: Processed S3A_OLCI_EFRNT.20251020T013125.L2.OC.NRT.nc -> 2025-10-20, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:26,145  INFO: Processed S3B_OLCI_EFRNT.20251002T015701.L2.OC.NRT.nc -> 2025-10-02, chl=7.7205
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:27,463  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:27,471  WARNING: Processed S3B_OLCI_EFRNT.20251003T013049.L2.OC.NRT.nc -> 2025-10-03, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:28,861  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:28,869  WARNING: Processed S3B_OLCI_EFRNT.20251003T013349.L2.OC.NRT.nc -> 2025-10-03, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:30,236  INFO: Processed S3B_OLCI_EFRNT.20251006T015314.L2.OC.NRT.nc -> 2025-10-06, chl=9.0715
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:31,546  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:31,553  WARNING: Processed S3B_OLCI_EFRNT.20251007T012704.L2.OC.NRT.nc -> 2025-10-07, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:32,961  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:32,972  WARNING: Processed S3B_OLCI_EFRNT.20251007T013004.L2.OC.NRT.nc -> 2025-10-07, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:34,388  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:34,397  WARNING: Processed S3B_OLCI_EFRNT.20251010T014931.L2.OC.NRT.nc -> 2025-10-10, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:35,735  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:35,744  WARNING: Processed S3B_OLCI_EFRNT.20251011T012320.L2.OC.NRT.nc -> 2025-10-11, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:37,177  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:37,189  WARNING: Processed S3B_OLCI_EFRNT.20251011T012620.L2.OC.NRT.nc -> 2025-10-11, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:38,646  INFO: Processed S3B_OLCI_EFRNT.20251014T014548.L2.OC.NRT.nc -> 2025-10-14, chl=3.5476
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:40,030  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:40,039  WARNING: Processed S3B_OLCI_EFRNT.20251015T011937.L2.OC.NRT.nc -> 2025-10-15, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:41,475  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:41,485  WARNING: Processed S3B_OLCI_EFRNT.20251015T012237.L2.OC.NRT.nc -> 2025-10-15, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:42,959  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:42,967  WARNING: Processed S3B_OLCI_EFRNT.20251017T020814.L2.OC.NRT.nc -> 2025-10-17, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:44,452  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:44,466  WARNING: Processed S3B_OLCI_EFRNT.20251018T014203.L2.OC.NRT.nc -> 2025-10-18, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:316: RuntimeWarning: Mean of empty slice
  chl_mean_3x3 = np.nanmean(region_3x3)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:331: RuntimeWarning: Mean of empty slice
  chl_mean_4x4 = np.nanmean(region_4x4)
2025-10-24 09:00:46,106  WARNING: Both 3x3 and 4x4 extraction returned NaN
2025-10-24 09:00:46,117  WARNING: Processed S3B_OLCI_EFRNT.20251019T011852.L2.OC.NRT.nc -> 2025-10-19, chl=NaN (no valid data in 3x3 or 4x4)
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:47,787  INFO: Processed S3B_OLCI_EFRNT.20251021T020430.L2.OC.NRT.nc -> 2025-10-21, chl=4.0366
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:420: FutureWarning: In a future version, xarray will not decode timedelta values based on the presence of a timedelta-like units attribute by default. Instead it will rely on the presence of a timedelta64 dtype attribute, which is now xarray's default way of encoding timedelta64 values. To continue decoding timedeltas based on the presence of a timedelta-like units attribute, users will need to explicitly opt-in by passing True or CFTimedeltaCoder(decode_via_units=True) to decode_timedelta. To silence this warning, set decode_timedelta to True, False, or a 'CFTimedeltaCoder' instance.
  datatree = xr.open_datatree(fpath)
2025-10-24 09:00:49,305  INFO: Processed S3B_OLCI_EFRNT.20251022T013820.L2.OC.NRT.nc -> 2025-10-22, chl=3.7152
2025-10-24 09:00:49,313  INFO: Extracted 9 valid records from 34 files
2025-10-24 09:00:49,341  INFO: Existing CSV has 21 records
2025-10-24 09:00:49,344  INFO: After merge: 22 total records
2025-10-24 09:00:49,348  INFO: \u2713 CSV saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\chl_timeseries.csv (22 rows)
2025-10-24 09:00:49,368  INFO: \u2713 CSV verified: 22 rows on disk
2025-10-24 09:00:49,382  INFO:   \u2713 Successfully filled gap for 2025-10-22
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:141: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  gap_df.loc[mask, 'last_checked'] = datetime.utcnow()
2025-10-24 09:00:51,407  INFO: 
--- Checking gap for 2025-10-23 ---
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:180: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  (gap_report['last_checked'] > datetime.utcnow() - timedelta(hours=24))
2025-10-24 09:00:51,408  INFO:   Skipping 2025-10-23 - checked recently, no data
2025-10-24 09:00:51,408  INFO: 
--- Checking gap for 2025-10-24 ---
2025-10-24 09:00:51,409  INFO: Logging in to Earthdata via earthaccess...
2025-10-24 09:00:54,096  INFO: Earthdata login OK.
2025-10-24 09:00:54,976  INFO: Granules found: 0
2025-10-24 09:00:55,895  INFO:   OLCIS3A_L2_EFR_OC_NRT: 0 granules found for 2025-10-24
2025-10-24 09:00:56,715  INFO: Granules found: 0
2025-10-24 09:00:57,428  INFO:   OLCIS3B_L2_EFR_OC_NRT: 0 granules found for 2025-10-24
2025-10-24 09:00:57,429  INFO:   No data available for 2025-10-24
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:148: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  'last_checked': [datetime.utcnow()]
2025-10-24 09:00:59,453  INFO: 
=== Gap filling complete: 1 filled, 2 checked ===
2025-10-24 09:00:59,453  INFO: Gap detection complete: 1 gaps filled
2025-10-24 09:00:59,474  INFO: 
============================================================
2025-10-24 09:00:59,474  INFO: GAP SUMMARY REPORT
2025-10-24 09:00:59,474  INFO: ============================================================
2025-10-24 09:00:59,477  INFO: 
Gap Status Distribution:
2025-10-24 09:00:59,477  INFO:   filled: 6
2025-10-24 09:00:59,477  INFO:   unavailable: 2
2025-10-24 09:00:59,479  INFO: 
Unfilled gaps: 2
2025-10-24 09:00:59,480  INFO:   Date range: 2025-10-23 to 2025-10-24
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:901: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  recent = gap_df[gap_df['last_checked'] > datetime.utcnow() - timedelta(hours=24)]
2025-10-24 09:00:59,481  INFO: 
Gaps checked in last 24 hours: 3
2025-10-24 09:00:59,482  INFO: ============================================================

2025-10-24 09:01:01,435  INFO: Chromium init'ed with kwargs {}
2025-10-24 09:01:01,436  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-24 09:01:01,438  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmph4z2an5g.
2025-10-24 09:01:01,440  INFO: Opening browser.
2025-10-24 09:01:01,442  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmp9txepkr2.
2025-10-24 09:01:01,442  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmp9txepkr2
2025-10-24 09:01:02,384  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmph4z2an5g/index.html
2025-10-24 09:01:02,384  INFO: Waiting on all navigates
2025-10-24 09:01:04,521  INFO: All navigates done, putting them all in queue.
2025-10-24 09:01:04,523  INFO: Getting tab from queue (has 1)
2025-10-24 09:01:04,524  INFO: Got DCD1
2025-10-24 09:01:04,524  INFO: Processing 5_Day_Chlorophyll_Trend_as_of_2025_10_22.png
2025-10-24 09:01:04,524  INFO: Sending big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_22.png.
2025-10-24 09:01:04,723  INFO: Sent big command for 5_Day_Chlorophyll_Trend_as_of_2025_10_22.png.
2025-10-24 09:01:04,724  INFO: Reloading tab DCD1 before return.
2025-10-24 09:01:04,937  INFO: Putting tab DCD1 back (queue size: 0).
2025-10-24 09:01:04,937  INFO: Waiting for all cleanups to finish.
2025-10-24 09:01:04,938  INFO: Exiting Kaleido
2025-10-24 09:01:04,939  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:04,939  INFO: shutil.rmtree worked.
2025-10-24 09:01:04,940  INFO: Cancelling tasks.
2025-10-24 09:01:04,940  INFO: Exiting Kaleido/Choreo
2025-10-24 09:01:04,940  INFO: Closing browser.
2025-10-24 09:01:04,942  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:04,943  INFO: shutil.rmtree worked.
2025-10-24 09:01:04,943  INFO: Cancelling tasks.
2025-10-24 09:01:04,943  INFO: Exiting Kaleido/Choreo
2025-10-24 09:01:04,943  INFO: Closing browser.
2025-10-24 09:01:05,347  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:05,348  INFO: shutil.rmtree worked.
2025-10-24 09:01:05,351  INFO: 5-day plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_5day_2025-10-22.html
2025-10-24 09:01:05,370  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:05,371  INFO: shutil.rmtree worked.
2025-10-24 09:01:05,484  INFO: Chromium init'ed with kwargs {}
2025-10-24 09:01:05,486  INFO: Found chromium path: C:\Program Files\Google\Chrome\Application\chrome.exe
2025-10-24 09:01:05,487  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmphl7ldg7q.
2025-10-24 09:01:05,489  INFO: Opening browser.
2025-10-24 09:01:05,492  INFO: Temp directory created: C:\Users\23755118\AppData\Local\Temp\tmpneych_t1.
2025-10-24 09:01:05,492  INFO: Temporary directory at: C:\Users\23755118\AppData\Local\Temp\tmpneych_t1
2025-10-24 09:01:06,260  INFO: Conforming 1 to file:///C:/Users/23755118/AppData/Local/Temp/tmphl7ldg7q/index.html
2025-10-24 09:01:06,261  INFO: Waiting on all navigates
2025-10-24 09:01:08,151  INFO: All navigates done, putting them all in queue.
2025-10-24 09:01:08,153  INFO: Getting tab from queue (has 1)
2025-10-24 09:01:08,154  INFO: Got B7E7
2025-10-24 09:01:08,154  INFO: Processing October_2025_Chlorophyll_Trend.png
2025-10-24 09:01:08,154  INFO: Sending big command for October_2025_Chlorophyll_Trend.png.
2025-10-24 09:01:08,324  INFO: Sent big command for October_2025_Chlorophyll_Trend.png.
2025-10-24 09:01:08,325  INFO: Reloading tab B7E7 before return.
2025-10-24 09:01:08,463  INFO: Putting tab B7E7 back (queue size: 0).
2025-10-24 09:01:08,463  INFO: Waiting for all cleanups to finish.
2025-10-24 09:01:08,463  INFO: Exiting Kaleido
2025-10-24 09:01:08,464  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:08,465  INFO: shutil.rmtree worked.
2025-10-24 09:01:08,465  INFO: Cancelling tasks.
2025-10-24 09:01:08,465  INFO: Exiting Kaleido/Choreo
2025-10-24 09:01:08,465  INFO: Closing browser.
2025-10-24 09:01:08,468  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:08,468  INFO: shutil.rmtree worked.
2025-10-24 09:01:08,468  INFO: Cancelling tasks.
2025-10-24 09:01:08,468  INFO: Exiting Kaleido/Choreo
2025-10-24 09:01:08,469  INFO: Closing browser.
2025-10-24 09:01:08,738  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:08,739  INFO: shutil.rmtree worked.
2025-10-24 09:01:08,763  INFO: Monthly plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chl_month_2025-10.html
2025-10-24 09:01:08,771  INFO: TemporaryDirectory.cleanup() worked.
2025-10-24 09:01:08,771  INFO: shutil.rmtree worked.
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:689: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-24 09:01:08,878  INFO: Full plot saved: C:/Users/23755118/OneDrive - UWA/Documents/PhD_Varshani/CODING/chl_time\plots\chlorophyll_timeseries_interactive.html
2025-10-24 09:01:08,879  INFO: Attempting to commit and push changes to Git...
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

2025-10-24 09:01:11,214  INFO: Git commit successful: Auto-update chlorophyll data: 2025-10-23
2025-10-24 09:01:11,322  INFO: Current branch: main
2025-10-24 09:01:13,549  INFO: Git push successful to main
2025-10-24 09:01:13,550  INFO: Git commit and push completed successfully
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:745: DeprecationWarning:

datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).

C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:752: DeprecationWarning:

datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).

2025-10-24 09:01:13,554  INFO: Cleanup done. Removed 0 files (excluding .nc)
2025-10-24 09:01:13,554  INFO: === Pipeline finished ===
2025-10-24 16:31:13,475  INFO: === Starting daily chlorophyll pipeline ===
C:\Users\23755118\OneDrive - UWA\Documents\PhD_Varshani\CODING\chl_time\daily_chl_pipeline.py:56: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  ref = datetime.utcnow()
2025-10-24 16:31:13,495  INFO: Daily mode: Searching for data for 2025-10-23
2025-10-24 16:31:13,495  INFO: Logging in to Earthdata via earthaccess...
2025-10-24 16:31:14,740  INFO: You're now authenticated with NASA Earthdata Login
2025-10-24 16:31:19,676  INFO: Earthdata login OK.
2025-10-24 16:31:19,677  INFO: Searching OLCIS3A_L2_EFR_OC_NRT for 2025-10-23...
2025-10-24 16:31:20,572  INFO: Granules found: 1
2025-10-24 16:31:21,405  INFO: Found 1 items. Downloading...
2025-10-24 16:31:21,406  INFO:  Getting 1 granules, approx download size: 0.15 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 2549.73it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:14<00:00, 14.46s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:14<00:00, 14.46s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 21509.25it/s]
2025-10-24 16:31:36,873  INFO: Searching OLCIS3B_L2_EFR_OC_NRT for 2025-10-23...
2025-10-24 16:31:37,633  INFO: Granules found: 1
2025-10-24 16:31:38,409  INFO: Found 1 items. Downloading...
2025-10-24 16:31:38,410  INFO:  Getting 1 granules, approx download size: 0.12 GB
QUEUEING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]QUEUEING TASKS | : 100%|##########| 1/1 [00:00<00:00, 2258.65it/s]
PROCESSING TASKS | :   0%|          | 0/1 [00:00<?, ?it/s]PROCESSING TASKS | : 100%|##########| 1/1 [00:11<00:00, 11.47s/it]PROCESSING TASKS | : 100%|##########| 1/1 [00:11<00:00, 11.47s/it]
COLLECTING RESULTS | :   0%|          | 0/1 [00:00<?, ?it/s]COLLECTING RESULTS | : 100%|##########| 1/1 [00:00<00:00, 19878.22it/s]
